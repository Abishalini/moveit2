[0.000000] (-) TimerEvent: {}
[0.000510] (-) JobUnselected: {'identifier': 'moveit_common'}
[0.000906] (-) JobUnselected: {'identifier': 'moveit_core'}
[0.001070] (-) JobUnselected: {'identifier': 'moveit_fake_controller_manager'}
[0.001404] (-) JobUnselected: {'identifier': 'moveit_kinematics'}
[0.001494] (-) JobUnselected: {'identifier': 'moveit_planners_ompl'}
[0.002152] (-) JobUnselected: {'identifier': 'moveit_ros_benchmarks'}
[0.002433] (-) JobUnselected: {'identifier': 'moveit_ros_move_group'}
[0.002576] (-) JobUnselected: {'identifier': 'moveit_ros_occupancy_map_monitor'}
[0.002639] (-) JobUnselected: {'identifier': 'moveit_ros_planning'}
[0.002718] (-) JobUnselected: {'identifier': 'moveit_ros_planning_interface'}
[0.002753] (-) JobUnselected: {'identifier': 'moveit_ros_robot_interaction'}
[0.002771] (-) JobUnselected: {'identifier': 'moveit_ros_visualization'}
[0.002804] (-) JobUnselected: {'identifier': 'moveit_ros_warehouse'}
[0.002821] (-) JobUnselected: {'identifier': 'moveit_simple_controller_manager'}
[0.002838] (-) JobUnselected: {'identifier': 'run_move_group'}
[0.002862] (-) JobUnselected: {'identifier': 'run_moveit_cpp'}
[0.002936] (moveit_servo) JobQueued: {'identifier': 'moveit_servo', 'dependencies': OrderedDict([('moveit_common', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_common'), ('moveit_core', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_core'), ('moveit_ros_occupancy_map_monitor', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_ros_occupancy_map_monitor'), ('moveit_ros_planning', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_ros_planning'), ('moveit_kinematics', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_kinematics'), ('moveit_ros_move_group', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_ros_move_group'), ('moveit_ros_planning_interface', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_ros_planning_interface')])}
[0.002982] (moveit_servo) JobStarted: {'identifier': 'moveit_servo'}
[0.016105] (moveit_servo) JobProgress: {'identifier': 'moveit_servo', 'progress': 'cmake'}
[0.016617] (moveit_servo) Command: {'cmd': ['/usr/bin/cmake', '/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo', '-DCMAKE_INSTALL_PREFIX=/home/abishalini/ws_ros2/src/moveit2/install/moveit_servo'], 'cwd': '/home/abishalini/ws_ros2/src/moveit2/build/moveit_servo', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'abishalini'), ('SSH_AGENT_PID', '1715'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo/lib:/home/abishalini/ws_ros2/install/moveit_ros_visualization/lib:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks/lib:/home/abishalini/ws_ros2/install/moveit_ros_warehouse/lib:/home/abishalini/ws_ros2/install/warehouse_ros/lib:/home/abishalini/ws_ros2/install/transmission_interface/lib:/home/abishalini/ws_ros2/install/test_robot_hardware/lib:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager/lib:/home/abishalini/ws_ros2/install/moveit_servo/lib:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction/lib:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface/lib:/home/abishalini/ws_ros2/install/moveit_ros_move_group/lib:/home/abishalini/ws_ros2/install/moveit_planners_ompl/lib:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager/lib:/home/abishalini/ws_ros2/install/moveit_ros_planning/lib:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor/lib:/home/abishalini/ws_ros2/install/moveit_kinematics/lib:/home/abishalini/ws_ros2/install/moveit_core/lib:/home/abishalini/ws_ros2/install/srdfdom/lib:/home/abishalini/ws_ros2/install/moveit_msgs/lib:/home/abishalini/ws_ros2/install/joint_trajectory_controller/lib:/home/abishalini/ws_ros2/install/joint_state_controller/lib:/home/abishalini/ws_ros2/install/diff_drive_controller/lib:/home/abishalini/ws_ros2/install/controller_manager/lib:/home/abishalini/ws_ros2/install/controller_interface/lib:/home/abishalini/ws_ros2/install/hardware_interface/lib:/home/abishalini/ws_ros2/install/geometric_shapes/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/abishalini'), ('OLDPWD', '/home/abishalini/ws_ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('PS1', '\\u@\\h \\[\\e[1;34m\\]\\w \\[\\e[32m\\]$(git_branch)\\[\\e[00m\\]$'), ('MANAGERPID', '1517'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '2731'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/abishalini/ws_ros2/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'abishalini'), ('JOURNAL_STREAM', '9:46405'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('USERNAME', 'abishalini'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/home/abishalini/ws_ros2/install/moveit_core/bin:/opt/ros/foxy/bin:/home/abishalini/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/davetop:@/tmp/.ICE-unix/1757,unix/davetop:/tmp/.ICE-unix/1757'), ('INVOCATION_ID', '89808c62cf0145ecae5b9a1520bbb3c1'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo:/home/abishalini/ws_ros2/install/moveit_ros_visualization:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks:/home/abishalini/ws_ros2/install/moveit_ros_warehouse:/home/abishalini/ws_ros2/install/warehouse_ros:/home/abishalini/ws_ros2/install/ros2_control:/home/abishalini/ws_ros2/install/transmission_interface:/home/abishalini/ws_ros2/install/test_robot_hardware:/home/abishalini/ws_ros2/install/run_moveit_cpp:/home/abishalini/ws_ros2/install/run_move_group:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager:/home/abishalini/ws_ros2/install/moveit_servo:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface:/home/abishalini/ws_ros2/install/moveit_ros_move_group:/home/abishalini/ws_ros2/install/moveit_planners_ompl:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager:/home/abishalini/ws_ros2/install/moveit_ros_planning:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor:/home/abishalini/ws_ros2/install/moveit_kinematics:/home/abishalini/ws_ros2/install/moveit_core:/home/abishalini/ws_ros2/install/srdfdom:/home/abishalini/ws_ros2/install/fake_joint_driver:/home/abishalini/ws_ros2/install/ros2_controllers:/home/abishalini/ws_ros2/install/moveit_resources:/home/abishalini/ws_ros2/install/moveit_resources_pr2_description:/home/abishalini/ws_ros2/install/moveit_resources_panda_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_panda_description:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_description:/home/abishalini/ws_ros2/install/moveit_common:/home/abishalini/ws_ros2/install/joint_trajectory_controller:/home/abishalini/ws_ros2/install/joint_state_controller:/home/abishalini/ws_ros2/install/diff_drive_controller:/home/abishalini/ws_ros2/install/controller_manager:/home/abishalini/ws_ros2/install/controller_interface:/home/abishalini/ws_ros2/install/hardware_interface:/home/abishalini/ws_ros2/install/geometric_shapes:/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:341978e3-96ab-4a4b-94f0-fbf519e72560'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/abishalini/ws_ros2/src/moveit2/build/moveit_servo'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo/lib/python3.8/site-packages:/home/abishalini/ws_ros2/install/moveit_msgs/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo:/home/abishalini/ws_ros2/install/moveit_ros_visualization:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks:/home/abishalini/ws_ros2/install/moveit_ros_warehouse:/home/abishalini/ws_ros2/install/warehouse_ros:/home/abishalini/ws_ros2/install/ros2_control:/home/abishalini/ws_ros2/install/transmission_interface:/home/abishalini/ws_ros2/install/test_robot_hardware:/home/abishalini/ws_ros2/install/run_moveit_cpp:/home/abishalini/ws_ros2/install/run_move_group:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager:/home/abishalini/ws_ros2/install/moveit_servo:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface:/home/abishalini/ws_ros2/install/moveit_ros_move_group:/home/abishalini/ws_ros2/install/moveit_planners_ompl:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager:/home/abishalini/ws_ros2/install/moveit_ros_planning:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor:/home/abishalini/ws_ros2/install/moveit_kinematics:/home/abishalini/ws_ros2/install/moveit_core:/home/abishalini/ws_ros2/install/srdfdom:/home/abishalini/ws_ros2/install/fake_joint_driver:/home/abishalini/ws_ros2/install/ros2_controllers:/home/abishalini/ws_ros2/install/moveit_resources:/home/abishalini/ws_ros2/install/moveit_resources_pr2_description:/home/abishalini/ws_ros2/install/moveit_resources_panda_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_panda_description:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_description:/home/abishalini/ws_ros2/install/moveit_msgs:/home/abishalini/ws_ros2/install/moveit_common:/home/abishalini/ws_ros2/install/joint_trajectory_controller:/home/abishalini/ws_ros2/install/joint_state_controller:/home/abishalini/ws_ros2/install/diff_drive_controller:/home/abishalini/ws_ros2/install/controller_manager:/home/abishalini/ws_ros2/install/controller_interface:/home/abishalini/ws_ros2/install/hardware_interface:/home/abishalini/ws_ros2/install/geometric_shapes:/opt/ros/foxy')]), 'shell': False}
[0.100117] (-) TimerEvent: {}
[0.200748] (-) TimerEvent: {}
[0.216022] (moveit_servo) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.3.0\n'}
[0.294118] (moveit_servo) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.3.0\n'}
[0.300864] (-) TimerEvent: {}
[0.302453] (moveit_servo) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.386296] (moveit_servo) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.387647] (moveit_servo) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.400962] (-) TimerEvent: {}
[0.475542] (moveit_servo) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.488677] (moveit_servo) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.489042] (moveit_servo) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.491977] (moveit_servo) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.501065] (-) TimerEvent: {}
[0.589151] (moveit_servo) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.590288] (moveit_servo) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.601200] (-) TimerEvent: {}
[0.691816] (moveit_servo) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.701302] (-) TimerEvent: {}
[0.713655] (moveit_servo) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.714197] (moveit_servo) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.721471] (moveit_servo) StdoutLine: {'line': b'-- Found moveit_common: 2.0.0 (/home/abishalini/ws_ros2/install/moveit_common/share/moveit_common/cmake)\n'}
[0.721927] (moveit_servo) StderrLine: {'line': b"moveit_servo: You did not request a specific build type: Choosing 'Release' for maximum performance\n"}
[0.731260] (moveit_servo) StdoutLine: {'line': b'-- Found ament_cmake: 0.9.7 (/opt/ros/foxy/share/ament_cmake/cmake)\n'}
[0.770555] (moveit_servo) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.5", minimum required is "3") \n'}
[0.770764] (moveit_servo) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[0.801404] (-) TimerEvent: {}
[0.901754] (-) TimerEvent: {}
[1.002075] (-) TimerEvent: {}
[1.102351] (-) TimerEvent: {}
[1.102884] (moveit_servo) StdoutLine: {'line': b'-- Found rclcpp: 2.2.0 (/opt/ros/foxy/share/rclcpp/cmake)\n'}
[1.179091] (moveit_servo) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[1.196305] (moveit_servo) StdoutLine: {'line': b'-- Found rosidl_adapter: 1.1.0 (/opt/ros/foxy/share/rosidl_adapter/cmake)\n'}
[1.202447] (-) TimerEvent: {}
[1.302705] (-) TimerEvent: {}
[1.350447] (moveit_servo) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  \n'}
[1.394088] (moveit_servo) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/foxy/include  \n'}
[1.402837] (-) TimerEvent: {}
[1.503127] (-) TimerEvent: {}
[1.547458] (moveit_servo) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[1.603266] (-) TimerEvent: {}
[1.672376] (moveit_servo) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 1.0.2 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)\n'}
[1.679601] (moveit_servo) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[1.681122] (moveit_servo) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[1.703404] (-) TimerEvent: {}
[1.789231] (moveit_servo) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[1.789720] (moveit_servo) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[1.803539] (-) TimerEvent: {}
[1.897053] (moveit_servo) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n'}
[1.897293] (moveit_servo) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads\n'}
[1.903649] (-) TimerEvent: {}
[1.999005] (moveit_servo) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads - not found\n'}
[1.999405] (moveit_servo) StdoutLine: {'line': b'-- Looking for pthread_create in pthread\n'}
[2.003764] (-) TimerEvent: {}
[2.104099] (-) TimerEvent: {}
[2.119584] (moveit_servo) StdoutLine: {'line': b'-- Looking for pthread_create in pthread - found\n'}
[2.120909] (moveit_servo) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[2.204225] (-) TimerEvent: {}
[2.304550] (-) TimerEvent: {}
[2.320179] (moveit_servo) StdoutLine: {'line': b'-- Found rclcpp_components: 2.2.0 (/opt/ros/foxy/share/rclcpp_components/cmake)\n'}
[2.404685] (-) TimerEvent: {}
[2.405088] (moveit_servo) StdoutLine: {'line': b'-- Found std_srvs: 2.0.3 (/opt/ros/foxy/share/std_srvs/cmake)\n'}
[2.422526] (moveit_servo) StdoutLine: {'line': b'-- Found sensor_msgs: 2.0.3 (/opt/ros/foxy/share/sensor_msgs/cmake)\n'}
[2.504827] (-) TimerEvent: {}
[2.574226] (moveit_servo) StdoutLine: {'line': b'-- Found control_msgs: 2.4.1 (/opt/ros/foxy/share/control_msgs/cmake)\n'}
[2.604964] (-) TimerEvent: {}
[2.705302] (-) TimerEvent: {}
[2.805734] (-) TimerEvent: {}
[2.906043] (-) TimerEvent: {}
[3.006347] (-) TimerEvent: {}
[3.022086] (moveit_servo) StdoutLine: {'line': b'-- Found control_toolbox: 2.0.1 (/opt/ros/foxy/share/control_toolbox/cmake)\n'}
[3.088308] (moveit_servo) StdoutLine: {'line': b'-- Found moveit_msgs: 0.10.0 (/home/abishalini/ws_ros2/install/moveit_msgs/share/moveit_msgs/cmake)\n'}
[3.106465] (-) TimerEvent: {}
[3.206733] (-) TimerEvent: {}
[3.307014] (-) TimerEvent: {}
[3.407319] (-) TimerEvent: {}
[3.507625] (-) TimerEvent: {}
[3.607922] (-) TimerEvent: {}
[3.708219] (-) TimerEvent: {}
[3.808516] (-) TimerEvent: {}
[3.908817] (-) TimerEvent: {}
[4.009124] (-) TimerEvent: {}
[4.109403] (-) TimerEvent: {}
[4.209726] (-) TimerEvent: {}
[4.239408] (moveit_servo) StdoutLine: {'line': b'-- Found tf2_eigen: 0.13.6 (/opt/ros/foxy/share/tf2_eigen/cmake)\n'}
[4.309831] (-) TimerEvent: {}
[4.410174] (-) TimerEvent: {}
[4.508684] (moveit_servo) StdoutLine: {'line': b'-- Found moveit_ros_planning: 2.0.0 (/home/abishalini/ws_ros2/install/moveit_ros_planning/share/moveit_ros_planning/cmake)\n'}
[4.510258] (-) TimerEvent: {}
[4.610570] (-) TimerEvent: {}
[4.710937] (-) TimerEvent: {}
[4.811269] (-) TimerEvent: {}
[4.837073] (moveit_servo) StdoutLine: {'line': b'-- Found Eigen3: TRUE (found version "3.3.7") \n'}
[4.911381] (-) TimerEvent: {}
[5.011771] (-) TimerEvent: {}
[5.112188] (-) TimerEvent: {}
[5.212528] (-) TimerEvent: {}
[5.312867] (-) TimerEvent: {}
[5.413259] (-) TimerEvent: {}
[5.513613] (-) TimerEvent: {}
[5.613933] (-) TimerEvent: {}
[5.714296] (-) TimerEvent: {}
[5.814587] (-) TimerEvent: {}
[5.914882] (-) TimerEvent: {}
[6.015178] (-) TimerEvent: {}
[6.115474] (-) TimerEvent: {}
[6.215798] (-) TimerEvent: {}
[6.316168] (-) TimerEvent: {}
[6.416466] (-) TimerEvent: {}
[6.516760] (-) TimerEvent: {}
[6.617053] (-) TimerEvent: {}
[6.717356] (-) TimerEvent: {}
[6.817699] (-) TimerEvent: {}
[6.918027] (-) TimerEvent: {}
[7.018319] (-) TimerEvent: {}
[7.118611] (-) TimerEvent: {}
[7.218906] (-) TimerEvent: {}
[7.319199] (-) TimerEvent: {}
[7.419498] (-) TimerEvent: {}
[7.519798] (-) TimerEvent: {}
[7.620090] (-) TimerEvent: {}
[7.720386] (-) TimerEvent: {}
[7.820683] (-) TimerEvent: {}
[7.920980] (-) TimerEvent: {}
[8.021274] (-) TimerEvent: {}
[8.121574] (-) TimerEvent: {}
[8.221869] (-) TimerEvent: {}
[8.322175] (-) TimerEvent: {}
[8.422480] (-) TimerEvent: {}
[8.522783] (-) TimerEvent: {}
[8.623089] (-) TimerEvent: {}
[8.723419] (-) TimerEvent: {}
[8.823723] (-) TimerEvent: {}
[8.924029] (-) TimerEvent: {}
[9.024337] (-) TimerEvent: {}
[9.124646] (-) TimerEvent: {}
[9.224954] (-) TimerEvent: {}
[9.325271] (-) TimerEvent: {}
[9.425573] (-) TimerEvent: {}
[9.525879] (-) TimerEvent: {}
[9.626173] (-) TimerEvent: {}
[9.726475] (-) TimerEvent: {}
[9.826774] (-) TimerEvent: {}
[9.927067] (-) TimerEvent: {}
[10.027371] (-) TimerEvent: {}
[10.127723] (-) TimerEvent: {}
[10.228116] (-) TimerEvent: {}
[10.328450] (-) TimerEvent: {}
[10.428780] (-) TimerEvent: {}
[10.529122] (-) TimerEvent: {}
[10.629448] (-) TimerEvent: {}
[10.729797] (-) TimerEvent: {}
[10.830174] (-) TimerEvent: {}
[10.930520] (-) TimerEvent: {}
[11.030861] (-) TimerEvent: {}
[11.131160] (-) TimerEvent: {}
[11.231469] (-) TimerEvent: {}
[11.331794] (-) TimerEvent: {}
[11.432096] (-) TimerEvent: {}
[11.532425] (-) TimerEvent: {}
[11.632765] (-) TimerEvent: {}
[11.733105] (-) TimerEvent: {}
[11.833482] (-) TimerEvent: {}
[11.933822] (-) TimerEvent: {}
[11.966074] (moveit_servo) StdoutLine: {'line': b'-- Found ament_cmake_gtest: 0.9.7 (/opt/ros/foxy/share/ament_cmake_gtest/cmake)\n'}
[11.971365] (moveit_servo) StdoutLine: {'line': b'-- Found ros_testing: 0.2.1 (/opt/ros/foxy/share/ros_testing/cmake)\n'}
[11.976472] (moveit_servo) StdoutLine: {'line': b'-- Found launch_testing_ament_cmake: 0.10.3 (/opt/ros/foxy/share/launch_testing_ament_cmake/cmake)\n'}
[11.981740] (moveit_servo) StdoutLine: {'line': b'-- Found python_cmake_module: 0.8.0 (/opt/ros/foxy/share/python_cmake_module/cmake)\n'}
[12.004629] (moveit_servo) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.5", minimum required is "3.5") \n'}
[12.013784] (moveit_servo) StdoutLine: {'line': b'-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython3.8.so (found suitable version "3.8.5", minimum required is "3.5") \n'}
[12.014043] (moveit_servo) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[12.014150] (moveit_servo) StdoutLine: {'line': b'-- Using PYTHON_INCLUDE_DIRS: /usr/include/python3.8\n'}
[12.014235] (moveit_servo) StdoutLine: {'line': b'-- Using PYTHON_LIBRARIES: /usr/lib/x86_64-linux-gnu/libpython3.8.so\n'}
[12.033928] (-) TimerEvent: {}
[12.037594] (moveit_servo) StdoutLine: {'line': b'-- Found PythonExtra: .so  \n'}
[12.048148] (moveit_servo) StdoutLine: {'line': b'-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found version "1.71.0") found components: filesystem \n'}
[12.053912] (moveit_servo) StdoutLine: {'line': b"-- Found gtest sources under '/opt/ros/foxy/src/gtest_vendor': C++ tests using 'Google Test' will be built\n"}
[12.058043] (moveit_servo) StdoutLine: {'line': b'-- Check if compiler accepts -pthread\n'}
[12.134062] (-) TimerEvent: {}
[12.153633] (moveit_servo) StdoutLine: {'line': b'-- Check if compiler accepts -pthread - yes\n'}
[12.234197] (-) TimerEvent: {}
[12.334451] (-) TimerEvent: {}
[12.434761] (-) TimerEvent: {}
[12.535059] (-) TimerEvent: {}
[12.635359] (-) TimerEvent: {}
[12.735755] (-) TimerEvent: {}
[12.836364] (-) TimerEvent: {}
[12.936679] (-) TimerEvent: {}
[13.037079] (-) TimerEvent: {}
[13.137364] (-) TimerEvent: {}
[13.237740] (-) TimerEvent: {}
[13.338049] (-) TimerEvent: {}
[13.438379] (-) TimerEvent: {}
[13.538772] (-) TimerEvent: {}
[13.639304] (-) TimerEvent: {}
[13.739618] (-) TimerEvent: {}
[13.839904] (-) TimerEvent: {}
[13.940261] (-) TimerEvent: {}
[14.040588] (-) TimerEvent: {}
[14.140896] (-) TimerEvent: {}
[14.241226] (-) TimerEvent: {}
[14.341535] (-) TimerEvent: {}
[14.441836] (-) TimerEvent: {}
[14.542144] (-) TimerEvent: {}
[14.642449] (-) TimerEvent: {}
[14.742753] (-) TimerEvent: {}
[14.843076] (-) TimerEvent: {}
[14.943462] (-) TimerEvent: {}
[15.043735] (-) TimerEvent: {}
[15.144069] (-) TimerEvent: {}
[15.244365] (-) TimerEvent: {}
[15.344663] (-) TimerEvent: {}
[15.444974] (-) TimerEvent: {}
[15.545255] (-) TimerEvent: {}
[15.645581] (-) TimerEvent: {}
[15.745908] (-) TimerEvent: {}
[15.846269] (-) TimerEvent: {}
[15.946713] (-) TimerEvent: {}
[16.047131] (-) TimerEvent: {}
[16.147602] (-) TimerEvent: {}
[16.248066] (-) TimerEvent: {}
[16.348485] (-) TimerEvent: {}
[16.448859] (-) TimerEvent: {}
[16.549153] (-) TimerEvent: {}
[16.649431] (-) TimerEvent: {}
[16.749798] (-) TimerEvent: {}
[16.850095] (-) TimerEvent: {}
[16.950394] (-) TimerEvent: {}
[17.050689] (-) TimerEvent: {}
[17.150994] (-) TimerEvent: {}
[17.251289] (-) TimerEvent: {}
[17.351587] (-) TimerEvent: {}
[17.451885] (-) TimerEvent: {}
[17.552187] (-) TimerEvent: {}
[17.652483] (-) TimerEvent: {}
[17.752779] (-) TimerEvent: {}
[17.853080] (-) TimerEvent: {}
[17.953382] (-) TimerEvent: {}
[18.053645] (-) TimerEvent: {}
[18.154010] (-) TimerEvent: {}
[18.254285] (-) TimerEvent: {}
[18.354584] (-) TimerEvent: {}
[18.454880] (-) TimerEvent: {}
[18.555141] (-) TimerEvent: {}
[18.655433] (-) TimerEvent: {}
[18.680446] (moveit_servo) StdoutLine: {'line': b'-- Configuring done\n'}
[18.755567] (-) TimerEvent: {}
[18.855856] (-) TimerEvent: {}
[18.956152] (-) TimerEvent: {}
[19.056426] (-) TimerEvent: {}
[19.156714] (-) TimerEvent: {}
[19.256998] (-) TimerEvent: {}
[19.357271] (-) TimerEvent: {}
[19.457558] (-) TimerEvent: {}
[19.557878] (-) TimerEvent: {}
[19.572540] (moveit_servo) StdoutLine: {'line': b'-- Generating done\n'}
[19.575658] (moveit_servo) StdoutLine: {'line': b'-- Build files have been written to: /home/abishalini/ws_ros2/src/moveit2/build/moveit_servo\n'}
[19.591969] (moveit_servo) CommandEnded: {'returncode': 0}
[19.593008] (moveit_servo) JobProgress: {'identifier': 'moveit_servo', 'progress': 'build'}
[19.594153] (moveit_servo) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/abishalini/ws_ros2/src/moveit2/build/moveit_servo', '--', '-j8', '-l8'], 'cwd': '/home/abishalini/ws_ros2/src/moveit2/build/moveit_servo', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'abishalini'), ('SSH_AGENT_PID', '1715'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo/lib:/home/abishalini/ws_ros2/install/moveit_ros_visualization/lib:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks/lib:/home/abishalini/ws_ros2/install/moveit_ros_warehouse/lib:/home/abishalini/ws_ros2/install/warehouse_ros/lib:/home/abishalini/ws_ros2/install/transmission_interface/lib:/home/abishalini/ws_ros2/install/test_robot_hardware/lib:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager/lib:/home/abishalini/ws_ros2/install/moveit_servo/lib:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction/lib:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface/lib:/home/abishalini/ws_ros2/install/moveit_ros_move_group/lib:/home/abishalini/ws_ros2/install/moveit_planners_ompl/lib:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager/lib:/home/abishalini/ws_ros2/install/moveit_ros_planning/lib:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor/lib:/home/abishalini/ws_ros2/install/moveit_kinematics/lib:/home/abishalini/ws_ros2/install/moveit_core/lib:/home/abishalini/ws_ros2/install/srdfdom/lib:/home/abishalini/ws_ros2/install/moveit_msgs/lib:/home/abishalini/ws_ros2/install/joint_trajectory_controller/lib:/home/abishalini/ws_ros2/install/joint_state_controller/lib:/home/abishalini/ws_ros2/install/diff_drive_controller/lib:/home/abishalini/ws_ros2/install/controller_manager/lib:/home/abishalini/ws_ros2/install/controller_interface/lib:/home/abishalini/ws_ros2/install/hardware_interface/lib:/home/abishalini/ws_ros2/install/geometric_shapes/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/abishalini'), ('OLDPWD', '/home/abishalini/ws_ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('PS1', '\\u@\\h \\[\\e[1;34m\\]\\w \\[\\e[32m\\]$(git_branch)\\[\\e[00m\\]$'), ('MANAGERPID', '1517'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '2731'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/abishalini/ws_ros2/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'abishalini'), ('JOURNAL_STREAM', '9:46405'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('USERNAME', 'abishalini'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/home/abishalini/ws_ros2/install/moveit_core/bin:/opt/ros/foxy/bin:/home/abishalini/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/davetop:@/tmp/.ICE-unix/1757,unix/davetop:/tmp/.ICE-unix/1757'), ('INVOCATION_ID', '89808c62cf0145ecae5b9a1520bbb3c1'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo:/home/abishalini/ws_ros2/install/moveit_ros_visualization:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks:/home/abishalini/ws_ros2/install/moveit_ros_warehouse:/home/abishalini/ws_ros2/install/warehouse_ros:/home/abishalini/ws_ros2/install/ros2_control:/home/abishalini/ws_ros2/install/transmission_interface:/home/abishalini/ws_ros2/install/test_robot_hardware:/home/abishalini/ws_ros2/install/run_moveit_cpp:/home/abishalini/ws_ros2/install/run_move_group:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager:/home/abishalini/ws_ros2/install/moveit_servo:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface:/home/abishalini/ws_ros2/install/moveit_ros_move_group:/home/abishalini/ws_ros2/install/moveit_planners_ompl:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager:/home/abishalini/ws_ros2/install/moveit_ros_planning:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor:/home/abishalini/ws_ros2/install/moveit_kinematics:/home/abishalini/ws_ros2/install/moveit_core:/home/abishalini/ws_ros2/install/srdfdom:/home/abishalini/ws_ros2/install/fake_joint_driver:/home/abishalini/ws_ros2/install/ros2_controllers:/home/abishalini/ws_ros2/install/moveit_resources:/home/abishalini/ws_ros2/install/moveit_resources_pr2_description:/home/abishalini/ws_ros2/install/moveit_resources_panda_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_panda_description:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_description:/home/abishalini/ws_ros2/install/moveit_common:/home/abishalini/ws_ros2/install/joint_trajectory_controller:/home/abishalini/ws_ros2/install/joint_state_controller:/home/abishalini/ws_ros2/install/diff_drive_controller:/home/abishalini/ws_ros2/install/controller_manager:/home/abishalini/ws_ros2/install/controller_interface:/home/abishalini/ws_ros2/install/hardware_interface:/home/abishalini/ws_ros2/install/geometric_shapes:/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:341978e3-96ab-4a4b-94f0-fbf519e72560'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/abishalini/ws_ros2/src/moveit2/build/moveit_servo'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo/lib/python3.8/site-packages:/home/abishalini/ws_ros2/install/moveit_msgs/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo:/home/abishalini/ws_ros2/install/moveit_ros_visualization:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks:/home/abishalini/ws_ros2/install/moveit_ros_warehouse:/home/abishalini/ws_ros2/install/warehouse_ros:/home/abishalini/ws_ros2/install/ros2_control:/home/abishalini/ws_ros2/install/transmission_interface:/home/abishalini/ws_ros2/install/test_robot_hardware:/home/abishalini/ws_ros2/install/run_moveit_cpp:/home/abishalini/ws_ros2/install/run_move_group:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager:/home/abishalini/ws_ros2/install/moveit_servo:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface:/home/abishalini/ws_ros2/install/moveit_ros_move_group:/home/abishalini/ws_ros2/install/moveit_planners_ompl:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager:/home/abishalini/ws_ros2/install/moveit_ros_planning:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor:/home/abishalini/ws_ros2/install/moveit_kinematics:/home/abishalini/ws_ros2/install/moveit_core:/home/abishalini/ws_ros2/install/srdfdom:/home/abishalini/ws_ros2/install/fake_joint_driver:/home/abishalini/ws_ros2/install/ros2_controllers:/home/abishalini/ws_ros2/install/moveit_resources:/home/abishalini/ws_ros2/install/moveit_resources_pr2_description:/home/abishalini/ws_ros2/install/moveit_resources_panda_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_panda_description:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_description:/home/abishalini/ws_ros2/install/moveit_msgs:/home/abishalini/ws_ros2/install/moveit_common:/home/abishalini/ws_ros2/install/joint_trajectory_controller:/home/abishalini/ws_ros2/install/joint_state_controller:/home/abishalini/ws_ros2/install/diff_drive_controller:/home/abishalini/ws_ros2/install/controller_manager:/home/abishalini/ws_ros2/install/controller_interface:/home/abishalini/ws_ros2/install/hardware_interface:/home/abishalini/ws_ros2/install/geometric_shapes:/opt/ros/foxy')]), 'shell': False}
[19.658023] (-) TimerEvent: {}
[19.659588] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gtest\x1b[0m\n'}
[19.664360] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gtest_main\x1b[0m\n'}
[19.664724] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target servo_controller_input\x1b[0m\n'}
[19.664976] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target fake_command_publisher\x1b[0m\n'}
[19.665982] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target moveit_servo\x1b[0m\n'}
[19.668840] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target test_servo_parameters_node\x1b[0m\n'}
[19.701248] (moveit_servo) StdoutLine: {'line': b'[  2%] \x1b[32mBuilding CXX object gtest/CMakeFiles/gtest_main.dir/src/gtest_main.cc.o\x1b[0m\n'}
[19.708119] (moveit_servo) StdoutLine: {'line': b'[  5%] \x1b[32mBuilding CXX object gtest/CMakeFiles/gtest.dir/src/gtest-all.cc.o\x1b[0m\n'}
[19.732436] (moveit_servo) StdoutLine: {'line': b'[  8%] \x1b[32mBuilding CXX object CMakeFiles/fake_command_publisher.dir/test/publish_fake_jog_commands.cpp.o\x1b[0m\n'}
[19.747860] (moveit_servo) StdoutLine: {'line': b'[ 11%] \x1b[32mBuilding CXX object CMakeFiles/test_servo_parameters_node.dir/test/test_servo_parameters_node.cpp.o\x1b[0m\n'}
[19.756473] (moveit_servo) StdoutLine: {'line': b'[ 14%] \x1b[32mBuilding CXX object CMakeFiles/servo_controller_input.dir/src/teleop_demo/joystick_servo_example.cpp.o\x1b[0m\n'}
[19.758102] (-) TimerEvent: {}
[19.858407] (-) TimerEvent: {}
[19.916029] (moveit_servo) StdoutLine: {'line': b'[ 17%] \x1b[32mBuilding CXX object CMakeFiles/moveit_servo.dir/src/servo_calcs.cpp.o\x1b[0m\n'}
[19.921072] (moveit_servo) StdoutLine: {'line': b'[ 20%] \x1b[32mBuilding CXX object CMakeFiles/moveit_servo.dir/src/collision_check.cpp.o\x1b[0m\n'}
[19.931431] (moveit_servo) StdoutLine: {'line': b'[ 23%] \x1b[32mBuilding CXX object CMakeFiles/moveit_servo.dir/src/servo.cpp.o\x1b[0m\n'}
[19.958532] (-) TimerEvent: {}
[20.059004] (-) TimerEvent: {}
[20.159378] (-) TimerEvent: {}
[20.261244] (-) TimerEvent: {}
[20.361610] (-) TimerEvent: {}
[20.466304] (-) TimerEvent: {}
[20.566697] (-) TimerEvent: {}
[20.667091] (-) TimerEvent: {}
[20.767525] (-) TimerEvent: {}
[20.867999] (-) TimerEvent: {}
[20.968412] (-) TimerEvent: {}
[21.068827] (-) TimerEvent: {}
[21.169241] (-) TimerEvent: {}
[21.269691] (-) TimerEvent: {}
[21.288522] (moveit_servo) StdoutLine: {'line': b'[ 26%] \x1b[32m\x1b[1mLinking CXX static library libgtest_main.a\x1b[0m\n'}
[21.369859] (-) TimerEvent: {}
[21.454127] (moveit_servo) StdoutLine: {'line': b'[ 26%] Built target gtest_main\n'}
[21.469966] (-) TimerEvent: {}
[21.481789] (moveit_servo) StdoutLine: {'line': b'[ 29%] \x1b[32mBuilding CXX object CMakeFiles/moveit_servo.dir/src/low_pass_filter.cpp.o\x1b[0m\n'}
[21.570081] (-) TimerEvent: {}
[21.670465] (-) TimerEvent: {}
[21.770863] (-) TimerEvent: {}
[21.871261] (-) TimerEvent: {}
[21.961095] (moveit_servo) StdoutLine: {'line': b'[ 32%] \x1b[32mBuilding CXX object CMakeFiles/moveit_servo.dir/include/moveit_servo/servo_parameters.cpp.o\x1b[0m\n'}
[21.971386] (-) TimerEvent: {}
[22.071872] (-) TimerEvent: {}
[22.172380] (-) TimerEvent: {}
[22.272783] (-) TimerEvent: {}
[22.373196] (-) TimerEvent: {}
[22.473604] (-) TimerEvent: {}
[22.574023] (-) TimerEvent: {}
[22.674479] (-) TimerEvent: {}
[22.774960] (-) TimerEvent: {}
[22.875401] (-) TimerEvent: {}
[22.975822] (-) TimerEvent: {}
[23.076249] (-) TimerEvent: {}
[23.176652] (-) TimerEvent: {}
[23.277243] (-) TimerEvent: {}
[23.377774] (-) TimerEvent: {}
[23.478168] (-) TimerEvent: {}
[23.578700] (-) TimerEvent: {}
[23.679257] (-) TimerEvent: {}
[23.779802] (-) TimerEvent: {}
[23.880368] (-) TimerEvent: {}
[23.980945] (-) TimerEvent: {}
[24.081491] (-) TimerEvent: {}
[24.181899] (-) TimerEvent: {}
[24.282320] (-) TimerEvent: {}
[24.382893] (-) TimerEvent: {}
[24.483450] (-) TimerEvent: {}
[24.584005] (-) TimerEvent: {}
[24.684550] (-) TimerEvent: {}
[24.785114] (-) TimerEvent: {}
[24.885693] (-) TimerEvent: {}
[24.986278] (-) TimerEvent: {}
[25.087175] (-) TimerEvent: {}
[25.187715] (-) TimerEvent: {}
[25.288269] (-) TimerEvent: {}
[25.388814] (-) TimerEvent: {}
[25.489368] (-) TimerEvent: {}
[25.589909] (-) TimerEvent: {}
[25.690299] (-) TimerEvent: {}
[25.790683] (-) TimerEvent: {}
[25.891097] (-) TimerEvent: {}
[25.991522] (-) TimerEvent: {}
[26.091925] (-) TimerEvent: {}
[26.192327] (-) TimerEvent: {}
[26.292739] (-) TimerEvent: {}
[26.393193] (-) TimerEvent: {}
[26.493700] (-) TimerEvent: {}
[26.594305] (-) TimerEvent: {}
[26.694711] (-) TimerEvent: {}
[26.795109] (-) TimerEvent: {}
[26.895512] (-) TimerEvent: {}
[26.995922] (-) TimerEvent: {}
[27.096321] (-) TimerEvent: {}
[27.196723] (-) TimerEvent: {}
[27.297152] (-) TimerEvent: {}
[27.397611] (-) TimerEvent: {}
[27.498064] (-) TimerEvent: {}
[27.598509] (-) TimerEvent: {}
[27.698940] (-) TimerEvent: {}
[27.799833] (-) TimerEvent: {}
[27.900285] (-) TimerEvent: {}
[27.927067] (moveit_servo) StdoutLine: {'line': b'[ 35%] \x1b[32m\x1b[1mLinking CXX executable test_servo_parameters_node\x1b[0m\n'}
[28.000418] (-) TimerEvent: {}
[28.101907] (-) TimerEvent: {}
[28.202615] (-) TimerEvent: {}
[28.304931] (-) TimerEvent: {}
[28.405486] (-) TimerEvent: {}
[28.507282] (-) TimerEvent: {}
[28.519455] (moveit_servo) StdoutLine: {'line': b'[ 35%] Built target test_servo_parameters_node\n'}
[28.607392] (-) TimerEvent: {}
[28.707976] (-) TimerEvent: {}
[28.808442] (-) TimerEvent: {}
[28.908891] (-) TimerEvent: {}
[29.009504] (-) TimerEvent: {}
[29.110602] (-) TimerEvent: {}
[29.177447] (moveit_servo) StdoutLine: {'line': b'[ 38%] \x1b[32m\x1b[1mLinking CXX executable fake_command_publisher\x1b[0m\n'}
[29.210720] (-) TimerEvent: {}
[29.311484] (-) TimerEvent: {}
[29.412068] (-) TimerEvent: {}
[29.437514] (moveit_servo) StdoutLine: {'line': b'[ 38%] Built target fake_command_publisher\n'}
[29.512188] (-) TimerEvent: {}
[29.612744] (-) TimerEvent: {}
[29.713147] (-) TimerEvent: {}
[29.817249] (-) TimerEvent: {}
[29.917652] (-) TimerEvent: {}
[30.018036] (-) TimerEvent: {}
[30.118428] (-) TimerEvent: {}
[30.218833] (-) TimerEvent: {}
[30.319225] (-) TimerEvent: {}
[30.419651] (-) TimerEvent: {}
[30.520060] (-) TimerEvent: {}
[30.620470] (-) TimerEvent: {}
[30.720939] (-) TimerEvent: {}
[30.821390] (-) TimerEvent: {}
[30.921782] (-) TimerEvent: {}
[31.022176] (-) TimerEvent: {}
[31.122589] (-) TimerEvent: {}
[31.223003] (-) TimerEvent: {}
[31.323404] (-) TimerEvent: {}
[31.423827] (-) TimerEvent: {}
[31.524266] (-) TimerEvent: {}
[31.624692] (-) TimerEvent: {}
[31.725095] (-) TimerEvent: {}
[31.825499] (-) TimerEvent: {}
[31.925891] (-) TimerEvent: {}
[32.026289] (-) TimerEvent: {}
[32.126714] (-) TimerEvent: {}
[32.227204] (-) TimerEvent: {}
[32.327702] (-) TimerEvent: {}
[32.428197] (-) TimerEvent: {}
[32.528708] (-) TimerEvent: {}
[32.629222] (-) TimerEvent: {}
[32.729760] (-) TimerEvent: {}
[32.830302] (-) TimerEvent: {}
[32.930682] (-) TimerEvent: {}
[33.031064] (-) TimerEvent: {}
[33.131449] (-) TimerEvent: {}
[33.231841] (-) TimerEvent: {}
[33.332229] (-) TimerEvent: {}
[33.432629] (-) TimerEvent: {}
[33.533015] (-) TimerEvent: {}
[33.633418] (-) TimerEvent: {}
[33.733813] (-) TimerEvent: {}
[33.834238] (-) TimerEvent: {}
[33.934633] (-) TimerEvent: {}
[34.035014] (-) TimerEvent: {}
[34.135410] (-) TimerEvent: {}
[34.235811] (-) TimerEvent: {}
[34.336222] (-) TimerEvent: {}
[34.436635] (-) TimerEvent: {}
[34.537038] (-) TimerEvent: {}
[34.637447] (-) TimerEvent: {}
[34.737840] (-) TimerEvent: {}
[34.838256] (-) TimerEvent: {}
[34.938659] (-) TimerEvent: {}
[35.039052] (-) TimerEvent: {}
[35.139470] (-) TimerEvent: {}
[35.239879] (-) TimerEvent: {}
[35.340273] (-) TimerEvent: {}
[35.440665] (-) TimerEvent: {}
[35.541057] (-) TimerEvent: {}
[35.641468] (-) TimerEvent: {}
[35.741853] (-) TimerEvent: {}
[35.842275] (-) TimerEvent: {}
[35.903111] (moveit_servo) StdoutLine: {'line': b'[ 41%] \x1b[32m\x1b[1mLinking CXX static library libgtest.a\x1b[0m\n'}
[35.942397] (-) TimerEvent: {}
[35.986765] (moveit_servo) StdoutLine: {'line': b'[ 41%] Built target gtest\n'}
[36.019909] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target test_servo_collision\x1b[0m\n'}
[36.020658] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target test_servo_singularity\x1b[0m\n'}
[36.020961] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target test_servo_integration\x1b[0m\n'}
[36.042521] (-) TimerEvent: {}
[36.143846] (-) TimerEvent: {}
[36.144653] (moveit_servo) StdoutLine: {'line': b'[ 44%] \x1b[32mBuilding CXX object CMakeFiles/test_servo_integration.dir/test/test_servo_interface.cpp.o\x1b[0m\n'}
[36.145463] (moveit_servo) StdoutLine: {'line': b'[ 47%] \x1b[32mBuilding CXX object CMakeFiles/test_servo_singularity.dir/test/test_servo_singularity.cpp.o\x1b[0m\n'}
[36.161136] (moveit_servo) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/test_servo_collision.dir/test/test_servo_collision.cpp.o\x1b[0m\n'}
[36.243966] (-) TimerEvent: {}
[36.344342] (-) TimerEvent: {}
[36.444719] (-) TimerEvent: {}
[36.545104] (-) TimerEvent: {}
[36.645574] (-) TimerEvent: {}
[36.746143] (-) TimerEvent: {}
[36.846549] (-) TimerEvent: {}
[36.948815] (-) TimerEvent: {}
[37.049429] (-) TimerEvent: {}
[37.149880] (-) TimerEvent: {}
[37.250364] (-) TimerEvent: {}
[37.352969] (-) TimerEvent: {}
[37.454718] (-) TimerEvent: {}
[37.555100] (-) TimerEvent: {}
[37.655490] (-) TimerEvent: {}
[37.757083] (-) TimerEvent: {}
[37.857484] (-) TimerEvent: {}
[37.958041] (-) TimerEvent: {}
[38.058566] (-) TimerEvent: {}
[38.160609] (-) TimerEvent: {}
[38.262272] (-) TimerEvent: {}
[38.363919] (-) TimerEvent: {}
[38.464329] (-) TimerEvent: {}
[38.566201] (-) TimerEvent: {}
[38.667732] (-) TimerEvent: {}
[38.768160] (-) TimerEvent: {}
[38.868559] (-) TimerEvent: {}
[38.969742] (-) TimerEvent: {}
[38.983416] (moveit_servo) StdoutLine: {'line': b'[ 52%] \x1b[32m\x1b[1mLinking CXX shared library libservo_controller_input.so\x1b[0m\n'}
[39.069869] (-) TimerEvent: {}
[39.171496] (-) TimerEvent: {}
[39.273994] (-) TimerEvent: {}
[39.376000] (-) TimerEvent: {}
[39.476915] (-) TimerEvent: {}
[39.577682] (-) TimerEvent: {}
[39.638837] (moveit_servo) StdoutLine: {'line': b'[ 52%] Built target servo_controller_input\n'}
[39.677803] (-) TimerEvent: {}
[39.778198] (-) TimerEvent: {}
[39.878798] (-) TimerEvent: {}
[39.979397] (-) TimerEvent: {}
[40.079784] (-) TimerEvent: {}
[40.180223] (-) TimerEvent: {}
[40.280674] (-) TimerEvent: {}
[40.381098] (-) TimerEvent: {}
[40.481512] (-) TimerEvent: {}
[40.581900] (-) TimerEvent: {}
[40.682301] (-) TimerEvent: {}
[40.782715] (-) TimerEvent: {}
[40.883154] (-) TimerEvent: {}
[40.983579] (-) TimerEvent: {}
[41.084014] (-) TimerEvent: {}
[41.184432] (-) TimerEvent: {}
[41.284876] (-) TimerEvent: {}
[41.385356] (-) TimerEvent: {}
[41.485794] (-) TimerEvent: {}
[41.586324] (-) TimerEvent: {}
[41.686793] (-) TimerEvent: {}
[41.787306] (-) TimerEvent: {}
[41.887710] (-) TimerEvent: {}
[41.988128] (-) TimerEvent: {}
[42.088681] (-) TimerEvent: {}
[42.189211] (-) TimerEvent: {}
[42.289774] (-) TimerEvent: {}
[42.390218] (-) TimerEvent: {}
[42.490653] (-) TimerEvent: {}
[42.591091] (-) TimerEvent: {}
[42.691663] (-) TimerEvent: {}
[42.792241] (-) TimerEvent: {}
[42.892826] (-) TimerEvent: {}
[42.993408] (-) TimerEvent: {}
[43.093858] (-) TimerEvent: {}
[43.194451] (-) TimerEvent: {}
[43.295886] (-) TimerEvent: {}
[43.396462] (-) TimerEvent: {}
[43.497057] (-) TimerEvent: {}
[43.597671] (-) TimerEvent: {}
[43.698236] (-) TimerEvent: {}
[43.798798] (-) TimerEvent: {}
[43.899332] (-) TimerEvent: {}
[43.999877] (-) TimerEvent: {}
[44.100476] (-) TimerEvent: {}
[44.201036] (-) TimerEvent: {}
[44.301644] (-) TimerEvent: {}
[44.402189] (-) TimerEvent: {}
[44.502729] (-) TimerEvent: {}
[44.603291] (-) TimerEvent: {}
[44.703876] (-) TimerEvent: {}
[44.804413] (-) TimerEvent: {}
[44.904933] (-) TimerEvent: {}
[45.005490] (-) TimerEvent: {}
[45.106024] (-) TimerEvent: {}
[45.206561] (-) TimerEvent: {}
[45.307134] (-) TimerEvent: {}
[45.407648] (-) TimerEvent: {}
[45.508193] (-) TimerEvent: {}
[45.608738] (-) TimerEvent: {}
[45.709260] (-) TimerEvent: {}
[45.810130] (-) TimerEvent: {}
[45.910671] (-) TimerEvent: {}
[46.011210] (-) TimerEvent: {}
[46.111888] (-) TimerEvent: {}
[46.212475] (-) TimerEvent: {}
[46.313040] (-) TimerEvent: {}
[46.413648] (-) TimerEvent: {}
[46.514097] (-) TimerEvent: {}
[46.614552] (-) TimerEvent: {}
[46.714965] (-) TimerEvent: {}
[46.815388] (-) TimerEvent: {}
[46.915799] (-) TimerEvent: {}
[47.016190] (-) TimerEvent: {}
[47.116635] (-) TimerEvent: {}
[47.217077] (-) TimerEvent: {}
[47.317508] (-) TimerEvent: {}
[47.417925] (-) TimerEvent: {}
[47.518336] (-) TimerEvent: {}
[47.618773] (-) TimerEvent: {}
[47.719206] (-) TimerEvent: {}
[47.819620] (-) TimerEvent: {}
[47.920031] (-) TimerEvent: {}
[48.020527] (-) TimerEvent: {}
[48.120956] (-) TimerEvent: {}
[48.221422] (-) TimerEvent: {}
[48.321841] (-) TimerEvent: {}
[48.422265] (-) TimerEvent: {}
[48.522664] (-) TimerEvent: {}
[48.623105] (-) TimerEvent: {}
[48.723546] (-) TimerEvent: {}
[48.823957] (-) TimerEvent: {}
[48.924359] (-) TimerEvent: {}
[49.024763] (-) TimerEvent: {}
[49.125213] (-) TimerEvent: {}
[49.225664] (-) TimerEvent: {}
[49.326109] (-) TimerEvent: {}
[49.426486] (-) TimerEvent: {}
[49.527021] (-) TimerEvent: {}
[49.627380] (-) TimerEvent: {}
[49.727737] (-) TimerEvent: {}
[49.828116] (-) TimerEvent: {}
[49.928503] (-) TimerEvent: {}
[50.028981] (-) TimerEvent: {}
[50.129468] (-) TimerEvent: {}
[50.229873] (-) TimerEvent: {}
[50.330272] (-) TimerEvent: {}
[50.430671] (-) TimerEvent: {}
[50.531068] (-) TimerEvent: {}
[50.631471] (-) TimerEvent: {}
[50.731883] (-) TimerEvent: {}
[50.832284] (-) TimerEvent: {}
[50.932690] (-) TimerEvent: {}
[51.033137] (-) TimerEvent: {}
[51.133574] (-) TimerEvent: {}
[51.233994] (-) TimerEvent: {}
[51.334415] (-) TimerEvent: {}
[51.434844] (-) TimerEvent: {}
[51.535251] (-) TimerEvent: {}
[51.635654] (-) TimerEvent: {}
[51.736065] (-) TimerEvent: {}
[51.836483] (-) TimerEvent: {}
[51.936904] (-) TimerEvent: {}
[52.037349] (-) TimerEvent: {}
[52.137758] (-) TimerEvent: {}
[52.238154] (-) TimerEvent: {}
[52.338549] (-) TimerEvent: {}
[52.438955] (-) TimerEvent: {}
[52.539365] (-) TimerEvent: {}
[52.639789] (-) TimerEvent: {}
[52.740212] (-) TimerEvent: {}
[52.840644] (-) TimerEvent: {}
[52.941113] (-) TimerEvent: {}
[53.041564] (-) TimerEvent: {}
[53.141996] (-) TimerEvent: {}
[53.242438] (-) TimerEvent: {}
[53.342857] (-) TimerEvent: {}
[53.443274] (-) TimerEvent: {}
[53.543684] (-) TimerEvent: {}
[53.644095] (-) TimerEvent: {}
[53.744508] (-) TimerEvent: {}
[53.844916] (-) TimerEvent: {}
[53.945333] (-) TimerEvent: {}
[54.045753] (-) TimerEvent: {}
[54.146167] (-) TimerEvent: {}
[54.246591] (-) TimerEvent: {}
[54.347013] (-) TimerEvent: {}
[54.447430] (-) TimerEvent: {}
[54.547853] (-) TimerEvent: {}
[54.648268] (-) TimerEvent: {}
[54.748680] (-) TimerEvent: {}
[54.849090] (-) TimerEvent: {}
[54.949512] (-) TimerEvent: {}
[55.049913] (-) TimerEvent: {}
[55.150292] (-) TimerEvent: {}
[55.250684] (-) TimerEvent: {}
[55.351079] (-) TimerEvent: {}
[55.451480] (-) TimerEvent: {}
[55.551923] (-) TimerEvent: {}
[55.652357] (-) TimerEvent: {}
[55.752769] (-) TimerEvent: {}
[55.853207] (-) TimerEvent: {}
[55.953666] (-) TimerEvent: {}
[56.054107] (-) TimerEvent: {}
[56.154617] (-) TimerEvent: {}
[56.255188] (-) TimerEvent: {}
[56.356608] (-) TimerEvent: {}
[56.457029] (-) TimerEvent: {}
[56.557485] (-) TimerEvent: {}
[56.657925] (-) TimerEvent: {}
[56.758350] (-) TimerEvent: {}
[56.858777] (-) TimerEvent: {}
[56.959195] (-) TimerEvent: {}
[57.059602] (-) TimerEvent: {}
[57.160162] (-) TimerEvent: {}
[57.260577] (-) TimerEvent: {}
[57.360988] (-) TimerEvent: {}
[57.461426] (-) TimerEvent: {}
[57.561841] (-) TimerEvent: {}
[57.662248] (-) TimerEvent: {}
[57.762659] (-) TimerEvent: {}
[57.863086] (-) TimerEvent: {}
[57.913769] (moveit_servo) StdoutLine: {'line': b'[ 55%] \x1b[32m\x1b[1mLinking CXX executable test_servo_singularity\x1b[0m\n'}
[57.963220] (-) TimerEvent: {}
[58.063662] (-) TimerEvent: {}
[58.164089] (-) TimerEvent: {}
[58.264537] (-) TimerEvent: {}
[58.365005] (-) TimerEvent: {}
[58.399450] (moveit_servo) StdoutLine: {'line': b'[ 55%] Built target test_servo_singularity\n'}
[58.465136] (-) TimerEvent: {}
[58.565508] (-) TimerEvent: {}
[58.665853] (-) TimerEvent: {}
[58.766192] (-) TimerEvent: {}
[58.866608] (-) TimerEvent: {}
[58.967000] (-) TimerEvent: {}
[59.067388] (-) TimerEvent: {}
[59.167764] (-) TimerEvent: {}
[59.268150] (-) TimerEvent: {}
[59.368533] (-) TimerEvent: {}
[59.468905] (-) TimerEvent: {}
[59.541788] (moveit_servo) StdoutLine: {'line': b'[ 58%] \x1b[32m\x1b[1mLinking CXX executable test_servo_collision\x1b[0m\n'}
[59.569023] (-) TimerEvent: {}
[59.669411] (-) TimerEvent: {}
[59.769805] (-) TimerEvent: {}
[59.870210] (-) TimerEvent: {}
[59.970620] (-) TimerEvent: {}
[60.008327] (moveit_servo) StdoutLine: {'line': b'[ 58%] Built target test_servo_collision\n'}
[60.070793] (-) TimerEvent: {}
[60.171318] (-) TimerEvent: {}
[60.271690] (-) TimerEvent: {}
[60.372070] (-) TimerEvent: {}
[60.472427] (-) TimerEvent: {}
[60.572792] (-) TimerEvent: {}
[60.673209] (-) TimerEvent: {}
[60.773647] (-) TimerEvent: {}
[60.874016] (-) TimerEvent: {}
[60.974375] (-) TimerEvent: {}
[61.074743] (-) TimerEvent: {}
[61.175105] (-) TimerEvent: {}
[61.275476] (-) TimerEvent: {}
[61.375846] (-) TimerEvent: {}
[61.476214] (-) TimerEvent: {}
[61.576581] (-) TimerEvent: {}
[61.676950] (-) TimerEvent: {}
[61.777330] (-) TimerEvent: {}
[61.877688] (-) TimerEvent: {}
[61.978040] (-) TimerEvent: {}
[62.078433] (-) TimerEvent: {}
[62.143358] (moveit_servo) StdoutLine: {'line': b'[ 61%] \x1b[32m\x1b[1mLinking CXX executable test_servo_integration\x1b[0m\n'}
[62.178569] (-) TimerEvent: {}
[62.278905] (-) TimerEvent: {}
[62.379240] (-) TimerEvent: {}
[62.479590] (-) TimerEvent: {}
[62.579895] (-) TimerEvent: {}
[62.604905] (moveit_servo) StdoutLine: {'line': b'[ 61%] Built target test_servo_integration\n'}
[62.680022] (-) TimerEvent: {}
[62.780337] (-) TimerEvent: {}
[62.880646] (-) TimerEvent: {}
[62.980945] (-) TimerEvent: {}
[63.081283] (-) TimerEvent: {}
[63.181571] (-) TimerEvent: {}
[63.281865] (-) TimerEvent: {}
[63.382121] (-) TimerEvent: {}
[63.482413] (-) TimerEvent: {}
[63.582707] (-) TimerEvent: {}
[63.683000] (-) TimerEvent: {}
[63.783343] (-) TimerEvent: {}
[63.883663] (-) TimerEvent: {}
[63.983985] (-) TimerEvent: {}
[64.084274] (-) TimerEvent: {}
[64.184597] (-) TimerEvent: {}
[64.284911] (-) TimerEvent: {}
[64.385231] (-) TimerEvent: {}
[64.485557] (-) TimerEvent: {}
[64.585880] (-) TimerEvent: {}
[64.686201] (-) TimerEvent: {}
[64.786528] (-) TimerEvent: {}
[64.886850] (-) TimerEvent: {}
[64.987197] (-) TimerEvent: {}
[65.087516] (-) TimerEvent: {}
[65.187837] (-) TimerEvent: {}
[65.288132] (-) TimerEvent: {}
[65.388431] (-) TimerEvent: {}
[65.488729] (-) TimerEvent: {}
[65.589029] (-) TimerEvent: {}
[65.689263] (-) TimerEvent: {}
[65.789552] (-) TimerEvent: {}
[65.889852] (-) TimerEvent: {}
[65.990150] (-) TimerEvent: {}
[66.090442] (-) TimerEvent: {}
[66.190740] (-) TimerEvent: {}
[66.291030] (-) TimerEvent: {}
[66.391325] (-) TimerEvent: {}
[66.491630] (-) TimerEvent: {}
[66.591923] (-) TimerEvent: {}
[66.692220] (-) TimerEvent: {}
[66.792519] (-) TimerEvent: {}
[66.892822] (-) TimerEvent: {}
[66.993131] (-) TimerEvent: {}
[67.093442] (-) TimerEvent: {}
[67.193766] (-) TimerEvent: {}
[67.294074] (-) TimerEvent: {}
[67.394384] (-) TimerEvent: {}
[67.494703] (-) TimerEvent: {}
[67.595024] (-) TimerEvent: {}
[67.695344] (-) TimerEvent: {}
[67.795666] (-) TimerEvent: {}
[67.896002] (-) TimerEvent: {}
[67.996335] (-) TimerEvent: {}
[68.096651] (-) TimerEvent: {}
[68.196973] (-) TimerEvent: {}
[68.297282] (-) TimerEvent: {}
[68.397617] (-) TimerEvent: {}
[68.497959] (-) TimerEvent: {}
[68.598298] (-) TimerEvent: {}
[68.675776] (moveit_servo) StdoutLine: {'line': b'[ 64%] \x1b[32m\x1b[1mLinking CXX shared library libmoveit_servo.so\x1b[0m\n'}
[68.698428] (-) TimerEvent: {}
[68.798853] (-) TimerEvent: {}
[68.899223] (-) TimerEvent: {}
[68.999574] (-) TimerEvent: {}
[69.099966] (-) TimerEvent: {}
[69.168298] (moveit_servo) StdoutLine: {'line': b'[ 64%] Built target moveit_servo\n'}
[69.191828] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target servo_server\x1b[0m\n'}
[69.193970] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target pose_tracking\x1b[0m\n'}
[69.194331] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target servo_cpp_demo\x1b[0m\n'}
[69.194484] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target test_servo_parameters\x1b[0m\n'}
[69.194918] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target test_low_pass_filter\x1b[0m\n'}
[69.195558] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target test_servo\x1b[0m\n'}
[69.200302] (-) TimerEvent: {}
[69.224753] (moveit_servo) StdoutLine: {'line': b'[ 67%] \x1b[32mBuilding CXX object CMakeFiles/test_low_pass_filter.dir/test/test_low_pass_filter.cpp.o\x1b[0m\n'}
[69.276716] (moveit_servo) StdoutLine: {'line': b'[ 70%] \x1b[32mBuilding CXX object CMakeFiles/test_servo_parameters.dir/test/test_servo_parameters.cpp.o\x1b[0m\n'}
[69.300418] (-) TimerEvent: {}
[69.351694] (moveit_servo) StdoutLine: {'line': b'[ 73%] \x1b[32mBuilding CXX object CMakeFiles/servo_server.dir/src/servo_server.cpp.o\x1b[0m\n'}
[69.363453] (moveit_servo) StdoutLine: {'line': b'[ 76%] \x1b[32mBuilding CXX object CMakeFiles/pose_tracking.dir/src/pose_tracking.cpp.o\x1b[0m\n'}
[69.385291] (moveit_servo) StdoutLine: {'line': b'[ 79%] \x1b[32mBuilding CXX object CMakeFiles/servo_cpp_demo.dir/src/cpp_interface_demo/servo_cpp_interface_demo.cpp.o\x1b[0m\n'}
[69.394841] (moveit_servo) StdoutLine: {'line': b'[ 82%] \x1b[32mBuilding CXX object CMakeFiles/test_servo.dir/test/unit_test_servo_calcs.cpp.o\x1b[0m\n'}
[69.403950] (-) TimerEvent: {}
[69.504335] (-) TimerEvent: {}
[69.604843] (-) TimerEvent: {}
[69.705399] (-) TimerEvent: {}
[69.805807] (-) TimerEvent: {}
[69.906229] (-) TimerEvent: {}
[70.006644] (-) TimerEvent: {}
[70.107050] (-) TimerEvent: {}
[70.211763] (-) TimerEvent: {}
[70.312199] (-) TimerEvent: {}
[70.412617] (-) TimerEvent: {}
[70.513246] (-) TimerEvent: {}
[70.613653] (-) TimerEvent: {}
[70.714058] (-) TimerEvent: {}
[70.814475] (-) TimerEvent: {}
[70.914926] (-) TimerEvent: {}
[71.015382] (-) TimerEvent: {}
[71.115802] (-) TimerEvent: {}
[71.216243] (-) TimerEvent: {}
[71.316707] (-) TimerEvent: {}
[71.417147] (-) TimerEvent: {}
[71.514814] (moveit_servo) StdoutLine: {'line': b'[ 85%] \x1b[32m\x1b[1mLinking CXX executable test_low_pass_filter\x1b[0m\n'}
[71.517229] (-) TimerEvent: {}
[71.617627] (-) TimerEvent: {}
[71.718230] (-) TimerEvent: {}
[71.819063] (-) TimerEvent: {}
[71.919782] (-) TimerEvent: {}
[72.020605] (-) TimerEvent: {}
[72.121244] (-) TimerEvent: {}
[72.222037] (-) TimerEvent: {}
[72.322480] (-) TimerEvent: {}
[72.345265] (moveit_servo) StdoutLine: {'line': b'[ 85%] Built target test_low_pass_filter\n'}
[72.422602] (-) TimerEvent: {}
[72.523270] (-) TimerEvent: {}
[72.623841] (-) TimerEvent: {}
[72.724464] (-) TimerEvent: {}
[72.825043] (-) TimerEvent: {}
[72.925650] (-) TimerEvent: {}
[73.026238] (-) TimerEvent: {}
[73.126886] (-) TimerEvent: {}
[73.227452] (-) TimerEvent: {}
[73.328009] (-) TimerEvent: {}
[73.428569] (-) TimerEvent: {}
[73.529103] (-) TimerEvent: {}
[73.629651] (-) TimerEvent: {}
[73.730226] (-) TimerEvent: {}
[73.830797] (-) TimerEvent: {}
[73.931270] (-) TimerEvent: {}
[74.031722] (-) TimerEvent: {}
[74.132164] (-) TimerEvent: {}
[74.232597] (-) TimerEvent: {}
[74.333038] (-) TimerEvent: {}
[74.433475] (-) TimerEvent: {}
[74.533899] (-) TimerEvent: {}
[74.634324] (-) TimerEvent: {}
[74.734754] (-) TimerEvent: {}
[74.835175] (-) TimerEvent: {}
[74.935593] (-) TimerEvent: {}
[75.036021] (-) TimerEvent: {}
[75.136452] (-) TimerEvent: {}
[75.236888] (-) TimerEvent: {}
[75.337317] (-) TimerEvent: {}
[75.437719] (-) TimerEvent: {}
[75.538128] (-) TimerEvent: {}
[75.638535] (-) TimerEvent: {}
[75.738963] (-) TimerEvent: {}
[75.839388] (-) TimerEvent: {}
[75.939809] (-) TimerEvent: {}
[76.040236] (-) TimerEvent: {}
[76.076054] (moveit_servo) StdoutLine: {'line': b'[ 88%] \x1b[32m\x1b[1mLinking CXX executable test_servo_parameters\x1b[0m\n'}
[76.140375] (-) TimerEvent: {}
[76.240926] (-) TimerEvent: {}
[76.341543] (-) TimerEvent: {}
[76.442149] (-) TimerEvent: {}
[76.542736] (-) TimerEvent: {}
[76.643533] (-) TimerEvent: {}
[76.744294] (-) TimerEvent: {}
[76.844870] (-) TimerEvent: {}
[76.877695] (moveit_servo) StdoutLine: {'line': b'[ 88%] Built target test_servo_parameters\n'}
[76.944998] (-) TimerEvent: {}
[77.045460] (-) TimerEvent: {}
[77.145877] (-) TimerEvent: {}
[77.246290] (-) TimerEvent: {}
[77.346709] (-) TimerEvent: {}
[77.447113] (-) TimerEvent: {}
[77.547527] (-) TimerEvent: {}
[77.647959] (-) TimerEvent: {}
[77.748359] (-) TimerEvent: {}
[77.848755] (-) TimerEvent: {}
[77.949176] (-) TimerEvent: {}
[78.049593] (-) TimerEvent: {}
[78.149990] (-) TimerEvent: {}
[78.250503] (-) TimerEvent: {}
[78.351022] (-) TimerEvent: {}
[78.451526] (-) TimerEvent: {}
[78.552054] (-) TimerEvent: {}
[78.652494] (-) TimerEvent: {}
[78.752940] (-) TimerEvent: {}
[78.853411] (-) TimerEvent: {}
[78.953837] (-) TimerEvent: {}
[79.054267] (-) TimerEvent: {}
[79.133884] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/ext/alloc_traits.h:36\x1b[m\x1b[K,\n'}
[79.134237] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/stl_construct.h:61\x1b[m\x1b[K,\n'}
[79.134403] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:64\x1b[m\x1b[K,\n'}
[79.134560] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[79.134735] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[79.134895] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[79.135060] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/alloc_traits.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::allocator_traits<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[79.135227] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:47:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.135398] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:91:1:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.135605] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[79.135762] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:400:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.135904] (moveit_servo) StderrLine: {'line': b'  400 |       using \x1b[01;31m\x1b[Kpointer\x1b[m\x1b[K = _Tp*;\n'}
[79.136029] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[79.136150] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:403:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.136286] (moveit_servo) StderrLine: {'line': b'  403 |       using \x1b[01;31m\x1b[Kconst_pointer\x1b[m\x1b[K = const _Tp*;\n'}
[79.136411] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.141333] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:80\x1b[m\x1b[K,\n'}
[79.141727] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[79.141917] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[79.142090] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[79.142250] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/unique_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::default_delete<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[79.142419] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:119:18:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.142603] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:91:1:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.142811] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[79.142973] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/unique_ptr.h:71:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.143143] (moveit_servo) StderrLine: {'line': b'   71 |         \x1b[01;31m\x1b[Kdefault_delete\x1b[m\x1b[K(const default_delete<_Up>&) noexcept { }\n'}
[79.143312] (moveit_servo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.143465] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/unique_ptr.h:75:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.143626] (moveit_servo) StderrLine: {'line': b'   75 |       \x1b[01;31m\x1b[Koperator\x1b[m\x1b[K()(_Tp* __ptr) const\n'}
[79.143773] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[79.154384] (-) TimerEvent: {}
[79.158397] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[79.159026] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[79.159210] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:39\x1b[m\x1b[K,\n'}
[79.159374] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:42\x1b[m\x1b[K,\n'}
[79.159529] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[79.159685] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[79.159835] (moveit_servo) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[79.159993] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription.hpp:327:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.160155] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1320:45:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _From1, class _To1, class> static std::true_type std::__is_convertible_helper<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >*, rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >*, false>::__test<_From1, _To1, <template-parameter-1-3> >(int) [with _From1 = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >*; _To1 = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >*; <template-parameter-1-3> = <missing>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.160355] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1329:42:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::__is_convertible_helper<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >*, rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >*, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.160519] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1335:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::is_convertible<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >*, rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >*>\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.160681] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:927:12:\x1b[m\x1b[K   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[79.160837] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1099:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp> using _Assignable = std::__shared_ptr<_Tp, _Lp>::_Compatible<_Yp, std::__shared_ptr<_Tp, _Lp>&> [with _Yp = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.161008] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1271:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::__shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, __gnu_cxx::_S_atomic>::_Assignable<_Yp> std::__shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, __gnu_cxx::_S_atomic>::operator=<_Yp>(std::__shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.161205] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1017:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::is_assignable<std::__shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, __gnu_cxx::_S_atomic>&, std::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.161374] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:111:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.161542] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.161709] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[79.161857] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.162003] (moveit_servo) StderrLine: {'line': b'  111 |   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[79.162113] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[79.162239] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.162369] (moveit_servo) StderrLine: {'line': b'   83 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[79.162484] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[79.162597] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:125:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.162745] (moveit_servo) StderrLine: {'line': b'  125 |   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[79.162869] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[79.162984] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.163120] (moveit_servo) StderrLine: {'line': b'   97 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[79.163256] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[79.167599] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Kmoveit_servo::PoseTracking::PoseTracking(const SharedPtr&, const ServoParametersPtr&, const PlanningSceneMonitorPtr&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[79.168380] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[79.168602] (moveit_servo) StderrLine: {'line': b'   74 |       "target_pose", 1, std::bind(&PoseTracking::targetPoseCallback, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[79.168778] (moveit_servo) StderrLine: {'line': b'      |                                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[79.168937] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[79.169093] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[79.169268] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[79.169428] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[79.169582] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:309:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.169759] (moveit_servo) StderrLine: {'line': b'  309 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[79.169917] (moveit_servo) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[79.170074] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:309:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.170257] (moveit_servo) StderrLine: {'line': b'  309 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[79.170413] (moveit_servo) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.170567] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.170736] (moveit_servo) StderrLine: {'line': b'  313 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[79.170888] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[79.171044] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[79.171207] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[79.171374] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.171531] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[79.171683] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.171836] (moveit_servo) StderrLine: {'line': b'  111 |  using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[79.171988] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.172145] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:324:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.172298] (moveit_servo) StderrLine: {'line': b'  324 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[79.172426] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[79.172540] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:324:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[79.172683] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.172864] (moveit_servo) StderrLine: {'line': b'   74 |       "target_pose", 1, std::bind(&PoseTracking::targetPoseCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[79.173015] (moveit_servo) StderrLine: {'line': b'      |                                                                                                  \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[79.173170] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[79.173326] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[79.173482] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[79.173655] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[79.173812] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:333:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.173979] (moveit_servo) StderrLine: {'line': b'  333 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[79.174135] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[79.174287] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:333:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.174454] (moveit_servo) StderrLine: {'line': b'  333 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[79.174607] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[79.174761] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.174926] (moveit_servo) StderrLine: {'line': b'  341 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[79.175072] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[79.175223] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  substitution of deduced template arguments resulted in errors seen above\n'}
[79.175377] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:349:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.175541] (moveit_servo) StderrLine: {'line': b'  349 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[79.175695] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[79.175849] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:349:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[79.176002] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.176168] (moveit_servo) StderrLine: {'line': b'   74 |       "target_pose", 1, std::bind(&PoseTracking::targetPoseCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[79.176332] (moveit_servo) StderrLine: {'line': b'      |                                                                                                  \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[79.187647] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kmoveit_servo::PoseTrackingStatusCode moveit_servo::PoseTracking::moveToPose(const Vector3d&, double, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[79.188353] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:132:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<geometry_msgs::msg::TwistStamped_<std::allocator<void> > >::publish(geometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.188581] (moveit_servo) StderrLine: {'line': b'  132 |     twist_stamped_pub_->publish(PoseTracking::calculateTwistCommand()\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[79.188754] (moveit_servo) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[79.189021] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_interfaces/node_topics_interface.hpp:29\x1b[m\x1b[K,\n'}
[79.189203] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:55\x1b[m\x1b[K,\n'}
[79.189372] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:42\x1b[m\x1b[K,\n'}
[79.189545] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[79.189701] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[79.189861] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::TwistStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.190037] (moveit_servo) StderrLine: {'line': b'  185 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<MessageT, MessageDeleter> msg)\n'}
[79.190186] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[79.190345] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:53:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<geometry_msgs::msg::TwistStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::TwistStamped_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.190511] (moveit_servo) StderrLine: {'line': b'  185 |   publish(\x1b[01;36m\x1b[Kstd::unique_ptr<MessageT, MessageDeleter> msg\x1b[m\x1b[K)\n'}
[79.190669] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[79.190827] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:209:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const MessageT&) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.190995] (moveit_servo) StderrLine: {'line': b'  209 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const MessageT & msg)\n'}
[79.191149] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[79.191306] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:209:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst geometry_msgs::msg::TwistStamped_<std::allocator<void> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.191491] (moveit_servo) StderrLine: {'line': b'  209 |   publish(\x1b[01;36m\x1b[Kconst MessageT & msg\x1b[m\x1b[K)\n'}
[79.191655] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[79.191814] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:226:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.191998] (moveit_servo) StderrLine: {'line': b'  226 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[79.192154] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[79.192306] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:226:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_t&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[79.192475] (moveit_servo) StderrLine: {'line': b'  226 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[79.192636] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.192794] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:232:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.193043] (moveit_servo) StderrLine: {'line': b'  232 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[79.193463] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[79.193638] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:232:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.193811] (moveit_servo) StderrLine: {'line': b'  232 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[79.193970] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.194130] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:246:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<MessageT, AllocatorT>&&) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.194295] (moveit_servo) StderrLine: {'line': b'  246 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<MessageT, AllocatorT> && loaned_msg)\n'}
[79.194457] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[79.194619] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:246:58:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<geometry_msgs::msg::TwistStamped_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.194801] (moveit_servo) StderrLine: {'line': b'  246 |   publish(\x1b[01;36m\x1b[Krclcpp::LoanedMessage<MessageT, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[79.194959] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[79.195116] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid moveit_servo::PoseTracking::readROSParams()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[79.195280] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:148:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Parameter\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kempty\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.195438] (moveit_servo) StderrLine: {'line': b'  148 |   rclcpp::Node::SharedPtr node = parameter_ns.\x1b[01;31m\x1b[Kempty\x1b[m\x1b[K() ? node : ros::NodeHandle(nh_, parameter_ns);\n'}
[79.195593] (moveit_servo) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[79.195748] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:148:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kros\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.195918] (moveit_servo) StderrLine: {'line': b'  148 |   rclcpp::Node::SharedPtr node = parameter_ns.empty() ? node : \x1b[01;31m\x1b[Kros\x1b[m\x1b[K::NodeHandle(nh_, parameter_ns);\n'}
[79.196076] (moveit_servo) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[79.196234] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:148:80:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knh_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[79.196397] (moveit_servo) StderrLine: {'line': b'  148 |   rclcpp::Node::SharedPtr node = parameter_ns.empty() ? node : ros::NodeHandle(\x1b[01;31m\x1b[Knh_\x1b[m\x1b[K, parameter_ns);\n'}
[79.196555] (moveit_servo) StderrLine: {'line': b'      |                                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[79.197294] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:152:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knh\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[79.197504] (moveit_servo) StderrLine: {'line': b'  152 |   while (rclcpp::ok() && !\x1b[01;31m\x1b[Knh\x1b[m\x1b[K.hasParam("planning_frame") && ((node->now() - begin).to_chrono<std::chrono::duration<double>>().count() < ROS_STARTUP_WAIT))\n'}
[79.197670] (moveit_servo) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[79.198458] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:161:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.198651] (moveit_servo) StderrLine: {'line': b'  161 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, node_, "planning_frame", planning_frame_);\n'}
[79.198820] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.198981] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:162:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.199156] (moveit_servo) StderrLine: {'line': b'  162 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, node_, "move_group_name", move_group_name_);\n'}
[79.199370] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.199531] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:170:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.199691] (moveit_servo) StderrLine: {'line': b'  170 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "publish_period", publish_period);\n'}
[79.199852] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.206057] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:170:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knh\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[79.206629] (moveit_servo) StderrLine: {'line': b'  170 |   error += !rosparam_shortcuts::get(LOGGER, \x1b[01;31m\x1b[Knh\x1b[m\x1b[K, "publish_period", publish_period);\n'}
[79.207396] (moveit_servo) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[79.207687] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:171:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kuse of deleted function \xe2\x80\x98\x1b[01m\x1b[Krclcpp::GenericRate<Clock>& rclcpp::GenericRate<Clock>::operator=(const rclcpp::GenericRate<Clock>&) [with Clock = std::chrono::_V2::system_clock]\x1b[m\x1b[K\xe2\x80\x99\n'}
[79.207910] (moveit_servo) StderrLine: {'line': b'  171 |   loop_rate_ = rclcpp::Rate(1 / publish_period\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[79.208105] (moveit_servo) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[79.208286] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/clock.hpp:22\x1b[m\x1b[K,\n'}
[79.208480] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:40\x1b[m\x1b[K,\n'}
[79.208658] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[79.208844] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[79.209026] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/rate.hpp:108:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kdeclared here\n'}
[79.209242] (moveit_servo) StderrLine: {'line': b'  108 |   \x1b[01;36m\x1b[KRCLCPP_DISABLE_COPY\x1b[m\x1b[K(GenericRate)\n'}
[79.209431] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.209610] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:179:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.209800] (moveit_servo) StderrLine: {'line': b'  179 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "windup_limit", windup_limit);\n'}
[79.209985] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.210191] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:185:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.210762] (moveit_servo) StderrLine: {'line': b'  185 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "x_proportional_gain", x_pid_config_.k_p);\n'}
[79.210973] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.211161] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:186:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.211371] (moveit_servo) StderrLine: {'line': b'  186 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "y_proportional_gain", y_pid_config_.k_p);\n'}
[79.211563] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.211755] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:187:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.211938] (moveit_servo) StderrLine: {'line': b'  187 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "z_proportional_gain", z_pid_config_.k_p);\n'}
[79.212772] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.212956] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:188:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.213137] (moveit_servo) StderrLine: {'line': b'  188 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "x_integral_gain", x_pid_config_.k_i);\n'}
[79.213325] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.213503] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:189:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.213679] (moveit_servo) StderrLine: {'line': b'  189 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "y_integral_gain", y_pid_config_.k_i);\n'}
[79.213850] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.214021] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:190:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.214194] (moveit_servo) StderrLine: {'line': b'  190 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "z_integral_gain", z_pid_config_.k_i);\n'}
[79.214362] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.214534] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:191:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.214709] (moveit_servo) StderrLine: {'line': b'  191 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "x_derivative_gain", x_pid_config_.k_d);\n'}
[79.214900] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.215068] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:192:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.215240] (moveit_servo) StderrLine: {'line': b'  192 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "y_derivative_gain", y_pid_config_.k_d);\n'}
[79.215410] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.215580] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:193:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.215756] (moveit_servo) StderrLine: {'line': b'  193 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "z_derivative_gain", z_pid_config_.k_d);\n'}
[79.215933] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.216106] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:195:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.216279] (moveit_servo) StderrLine: {'line': b'  195 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "angular_proportional_gain", angular_pid_config_.k_p);\n'}
[79.216452] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.216622] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:196:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.216797] (moveit_servo) StderrLine: {'line': b'  196 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "angular_integral_gain", angular_pid_config_.k_i);\n'}
[79.216966] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.217138] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:197:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.217339] (moveit_servo) StderrLine: {'line': b'  197 |   error += !\x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::get(LOGGER, nh, "angular_derivative_gain", angular_pid_config_.k_d);\n'}
[79.217525] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.217696] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:199:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Krosparam_shortcuts\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.217868] (moveit_servo) StderrLine: {'line': b'  199 |   \x1b[01;31m\x1b[Krosparam_shortcuts\x1b[m\x1b[K::shutdownIfError(ros::this_node::getName(), error);\n'}
[79.218053] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[79.218227] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:199:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kros\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[79.218400] (moveit_servo) StderrLine: {'line': b'  199 |   rosparam_shortcuts::shutdownIfError(\x1b[01;31m\x1b[Kros\x1b[m\x1b[K::this_node::getName(), error);\n'}
[79.218573] (moveit_servo) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[79.232881] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr moveit_servo::PoseTracking::calculateTwistCommand()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[79.233223] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:298:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcould not convert \xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99 from \xe2\x80\x98\x1b[01m\x1b[Kboost::shared_ptr<geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99}\n'}
[79.233430] (moveit_servo) StderrLine: {'line': b'  298 |   return \x1b[01;31m\x1b[Kmsg\x1b[m\x1b[K;\n'}
[79.233593] (moveit_servo) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[79.233749] (moveit_servo) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[79.233908] (moveit_servo) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[Kboost::shared_ptr<geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\n'}
[79.254507] (-) TimerEvent: {}
[79.354933] (-) TimerEvent: {}
[79.455338] (-) TimerEvent: {}
[79.555762] (-) TimerEvent: {}
[79.656223] (-) TimerEvent: {}
[79.756665] (-) TimerEvent: {}
[79.857084] (-) TimerEvent: {}
[79.957531] (-) TimerEvent: {}
[80.057943] (-) TimerEvent: {}
[80.158357] (-) TimerEvent: {}
[80.258786] (-) TimerEvent: {}
[80.359216] (-) TimerEvent: {}
[80.459678] (-) TimerEvent: {}
[80.560114] (-) TimerEvent: {}
[80.660534] (-) TimerEvent: {}
[80.760940] (-) TimerEvent: {}
[80.861364] (-) TimerEvent: {}
[80.958765] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_interfaces/node_topics_interface.hpp:32\x1b[m\x1b[K,\n'}
[80.959553] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:55\x1b[m\x1b[K,\n'}
[80.959711] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:42\x1b[m\x1b[K,\n'}
[80.959845] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[80.959979] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[80.960106] (moveit_servo) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/subscription_factory.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[80.960269] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:138:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.960435] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.960582] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[80.960715] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:97:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >::set(std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.960849] (moveit_servo) StderrLine: {'line': b'   97 |   \x1b[01;31m\x1b[Kany_subscription_callback\x1b[m\x1b[K.set(std::forward<CallbackT>(callback));\n'}
[80.960974] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[80.961097] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[80.961242] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[80.961362] (-) TimerEvent: {}
[80.961537] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:39\x1b[m\x1b[K,\n'}
[80.961674] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:42\x1b[m\x1b[K,\n'}
[80.961808] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[80.961939] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[80.962062] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.962206] (moveit_servo) StderrLine: {'line': b'   83 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[80.962329] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[80.962454] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[80.962578] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:81:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.962705] (moveit_servo) StderrLine: {'line': b'   81 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[80.962829] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[80.962951] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.963092] (moveit_servo) StderrLine: {'line': b'   97 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[80.963215] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[80.963337] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[80.963461] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:95:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.963586] (moveit_servo) StderrLine: {'line': b'   95 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[80.963708] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[80.963834] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::default_delete<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.963993] (moveit_servo) StderrLine: {'line': b'  139 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[80.964118] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[80.964240] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[80.964363] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:137:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.964495] (moveit_servo) StderrLine: {'line': b'  137 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[80.964616] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[80.964744] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::default_delete<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.964887] (moveit_servo) StderrLine: {'line': b'  153 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[80.965011] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[80.965134] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[80.965307] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:151:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[80.965436] (moveit_servo) StderrLine: {'line': b'  151 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[80.965559] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[81.061491] (-) TimerEvent: {}
[81.161885] (-) TimerEvent: {}
[81.262305] (-) TimerEvent: {}
[81.362695] (-) TimerEvent: {}
[81.463093] (-) TimerEvent: {}
[81.563504] (-) TimerEvent: {}
[81.663928] (-) TimerEvent: {}
[81.764388] (-) TimerEvent: {}
[81.864819] (-) TimerEvent: {}
[81.965260] (-) TimerEvent: {}
[82.065713] (-) TimerEvent: {}
[82.166135] (-) TimerEvent: {}
[82.266539] (-) TimerEvent: {}
[82.366962] (-) TimerEvent: {}
[82.467435] (-) TimerEvent: {}
[82.567892] (-) TimerEvent: {}
[82.668345] (-) TimerEvent: {}
[82.768784] (-) TimerEvent: {}
[82.869234] (-) TimerEvent: {}
[82.969650] (-) TimerEvent: {}
[83.070072] (-) TimerEvent: {}
[83.170536] (-) TimerEvent: {}
[83.271009] (-) TimerEvent: {}
[83.371561] (-) TimerEvent: {}
[83.382631] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[83.383161] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[83.383359] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:63\x1b[m\x1b[K,\n'}
[83.383522] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[83.383682] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[83.384239] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[83.384421] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass __gnu_cxx::new_allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[83.384573] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:112:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.384723] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1365:63:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> struct std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp, std::__void_t<decltype (__enable_shared_from_this_base(declval<const std::__shared_count<__gnu_cxx::_S_atomic>&>(), declval<_Yp*>()))> > [with _Yp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.384890] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1387:21:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Yp2> typename std::enable_if<(! std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp2, void>::value), void>::type std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::_M_enable_shared_from_this_with<_Yp, _Yp2>(_Yp*) [with _Yp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Yp2 = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.385067] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1345:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.385242] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:359:59:\x1b[m\x1b[K   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[83.385391] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Args = {std::allocator<void>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.385540] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:68:56:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, Alloc>::AnySubscriptionCallback(std::shared_ptr<_Tp>) [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.385689] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:96:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.385879] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:138:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.386061] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.386246] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[83.386391] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:63:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.386542] (moveit_servo) StderrLine: {'line': b'   63 |       typedef _Tp*       \x1b[01;31m\x1b[Kpointer\x1b[m\x1b[K;\n'}
[83.386683] (moveit_servo) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[83.386828] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:64:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.386975] (moveit_servo) StderrLine: {'line': b'   64 |       typedef const _Tp* \x1b[01;31m\x1b[Kconst_pointer\x1b[m\x1b[K;\n'}
[83.387117] (moveit_servo) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[83.387272] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:63\x1b[m\x1b[K,\n'}
[83.387412] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[83.387572] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[83.387715] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[83.387858] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[83.388005] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1365:63:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> struct std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp, std::__void_t<decltype (__enable_shared_from_this_base(declval<const std::__shared_count<__gnu_cxx::_S_atomic>&>(), declval<_Yp*>()))> > [with _Yp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.388173] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1387:21:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Yp2> typename std::enable_if<(! std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp2, void>::value), void>::type std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::_M_enable_shared_from_this_with<_Yp, _Yp2>(_Yp*) [with _Yp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Yp2 = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.388339] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1345:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.388492] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:359:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.388643] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Alloc = std::allocator<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.388790] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Args = {std::allocator<void>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.388938] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:68:56:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, Alloc>::AnySubscriptionCallback(std::shared_ptr<_Tp>) [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.389092] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:96:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.389302] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:138:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.389481] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.389652] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[83.389795] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:117:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.389958] (moveit_servo) StderrLine: {'line': b'  117 |       typedef _Tp*       \x1b[01;31m\x1b[Kpointer\x1b[m\x1b[K;\n'}
[83.390101] (moveit_servo) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[83.390247] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:118:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[83.390401] (moveit_servo) StderrLine: {'line': b'  118 |       typedef const _Tp* \x1b[01;31m\x1b[Kconst_pointer\x1b[m\x1b[K;\n'}
[83.390548] (moveit_servo) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[83.471673] (-) TimerEvent: {}
[83.572096] (-) TimerEvent: {}
[83.672541] (-) TimerEvent: {}
[83.772957] (-) TimerEvent: {}
[83.873387] (-) TimerEvent: {}
[83.973793] (-) TimerEvent: {}
[84.074195] (-) TimerEvent: {}
[84.174616] (-) TimerEvent: {}
[84.275056] (-) TimerEvent: {}
[84.375492] (-) TimerEvent: {}
[84.475927] (-) TimerEvent: {}
[84.576351] (-) TimerEvent: {}
[84.676851] (-) TimerEvent: {}
[84.777244] (-) TimerEvent: {}
[84.877643] (-) TimerEvent: {}
[84.908338] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:52\x1b[m\x1b[K,\n'}
[84.908881] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[84.909243] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[84.909451] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[84.909592] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[84.909726] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr_access<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic, false, false>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[84.909927] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1080:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.910056] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.910186] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[84.910308] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1012:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[84.910451] (moveit_servo) StderrLine: {'line': b' 1012 |       \x1b[01;31m\x1b[Koperator\x1b[m\x1b[K->() const noexcept\n'}
[84.910574] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[84.910692] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1020:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[84.910820] (moveit_servo) StderrLine: {'line': b' 1020 |       \x1b[01;31m\x1b[K_M_get\x1b[m\x1b[K() const noexcept\n'}
[84.910955] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[84.911076] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[84.911211] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.911341] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[84.911465] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1094:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.911759] (moveit_servo) StderrLine: {'line': b' 1094 |  using \x1b[01;31m\x1b[K_Compatible\x1b[m\x1b[K = typename\n'}
[84.911882] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[84.912004] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1104:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.912136] (moveit_servo) StderrLine: {'line': b' 1104 |  using \x1b[01;31m\x1b[K_UniqCompatible\x1b[m\x1b[K = typename enable_if<__and_<\n'}
[84.912259] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[84.912380] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1162:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[84.912518] (moveit_servo) StderrLine: {'line': b' 1162 |  \x1b[01;31m\x1b[K__shared_ptr\x1b[m\x1b[K(const __shared_ptr<_Yp, _Lp>& __r,\n'}
[84.912641] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[84.912762] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Res> using _Compatible = typename std::enable_if<std::__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type [with _Yp = _Yp; _Res = void; _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[84.912899] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1172:2:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.913024] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.913151] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[84.913448] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1094:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.913588] (moveit_servo) StderrLine: {'line': b' 1094 |  using \x1b[01;31m\x1b[K_Compatible\x1b[m\x1b[K = typename\n'}
[84.913722] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[84.913855] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Del, class _Res, class _Ptr> using _UniqCompatible = typename std::enable_if<std::__and_<std::__sp_compatible_with<_Yp*, _Tp*>, std::is_convertible<_Ptr, typename std::remove_extent<_Up>::type*> >::value, _Res>::type [with _Yp = _Yp; _Del = _Del; _Res = void; _Ptr = typename std::unique_ptr<_Tp, _Dp>::pointer; _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[84.914008] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1203:2:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.914143] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.914280] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[84.914412] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1104:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.914544] (moveit_servo) StderrLine: {'line': b' 1104 |  using \x1b[01;31m\x1b[K_UniqCompatible\x1b[m\x1b[K = typename enable_if<__and_<\n'}
[84.914676] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[84.914813] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[84.914964] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.915099] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[84.915220] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1219:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.915340] (moveit_servo) StderrLine: {'line': b' 1219 |  \x1b[01;31m\x1b[K__shared_ptr\x1b[m\x1b[K(unique_ptr<_Tp1, _Del>&& __r, __sp_array_delete)\n'}
[84.915458] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[84.915575] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1309:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[84.915701] (moveit_servo) StderrLine: {'line': b' 1309 |       \x1b[01;31m\x1b[Kget\x1b[m\x1b[K() const noexcept\n'}
[84.915820] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[84.915938] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1404:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[84.916060] (moveit_servo) StderrLine: {'line': b' 1404 |       element_type*    \x1b[01;31m\x1b[K_M_ptr\x1b[m\x1b[K;         // Contained pointer.\n'}
[84.916182] (moveit_servo) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[84.916300] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[84.916418] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[84.916537] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[84.916655] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[84.916774] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[84.916901] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.917030] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[84.917149] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:234:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[84.917302] (moveit_servo) StderrLine: {'line': b'  234 |  \x1b[01;31m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[84.917428] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[84.976029] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:52\x1b[m\x1b[K,\n'}
[84.976433] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[84.976597] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[84.976748] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[84.976892] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[84.977037] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::__shared_ptr<_Tp, _Lp>::__shared_ptr() [with _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[84.977220] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1287:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::reset() [with _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.977381] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:109:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::return_message(std::shared_ptr<_Tp>&) [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.977533] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:107:16:\x1b[m\x1b[K   required from here\n'}
[84.977668] (-) TimerEvent: {}
[84.977842] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1119:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.978001] (moveit_servo) StderrLine: {'line': b' 1119 |       : _M_ptr(0), _M_refcount(\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[84.978146] (moveit_servo) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[84.978299] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::swap(std::__shared_ptr<_Tp, _Lp>&) [with _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[84.978468] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1287:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::reset() [with _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.978622] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:109:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::return_message(std::shared_ptr<_Tp>&) [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.978777] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:107:16:\x1b[m\x1b[K   required from here\n'}
[84.978921] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1326:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.979075] (moveit_servo) StderrLine: {'line': b' 1326 |  std::swap(\x1b[01;31m\x1b[K_M_ptr\x1b[m\x1b[K, __other._M_ptr);\n'}
[84.979218] (moveit_servo) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[84.979358] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1326:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[K_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[84.979506] (moveit_servo) StderrLine: {'line': b' 1326 |  std::swap(_M_ptr, \x1b[01;31m\x1b[K__other._M_ptr\x1b[m\x1b[K);\n'}
[84.979646] (moveit_servo) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[85.077795] (-) TimerEvent: {}
[85.107081] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/functional:59\x1b[m\x1b[K,\n'}
[85.107494] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/clock.hpp:18\x1b[m\x1b[K,\n'}
[85.107665] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:40\x1b[m\x1b[K,\n'}
[85.107822] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[85.107974] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[85.108116] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/std_function.h:\x1b[m\x1b[K At global scope:\n'}
[85.108260] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/std_function.h:667:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Res = std::shared_ptr<rclcpp::SubscriptionBase>; _ArgTypes = {rclcpp::node_interfaces::NodeBaseInterface*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&}]\x1b[m\x1b[K\xe2\x80\x99, declared using local type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>\x1b[m\x1b[K\xe2\x80\x99, is used but never defined [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[85.108512] (moveit_servo) StderrLine: {'line': b'  667 |       \x1b[01;31m\x1b[Kfunction<_Res(_ArgTypes...)>\x1b[m\x1b[K::\n'}
[85.108662] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[85.177902] (-) TimerEvent: {}
[85.278331] (-) TimerEvent: {}
[85.378775] (-) TimerEvent: {}
[85.479225] (-) TimerEvent: {}
[85.579724] (-) TimerEvent: {}
[85.631412] (moveit_servo) StderrLine: {'line': b'make[2]: *** [CMakeFiles/pose_tracking.dir/build.make:63: CMakeFiles/pose_tracking.dir/src/pose_tracking.cpp.o] Error 1\n'}
[85.631892] (moveit_servo) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:452: CMakeFiles/pose_tracking.dir/all] Error 2\n'}
[85.632050] (moveit_servo) StderrLine: {'line': b'make[1]: *** Waiting for unfinished jobs....\n'}
[85.679857] (-) TimerEvent: {}
[85.780195] (-) TimerEvent: {}
[85.880502] (-) TimerEvent: {}
[85.980814] (-) TimerEvent: {}
[86.081116] (-) TimerEvent: {}
[86.181413] (-) TimerEvent: {}
[86.281739] (-) TimerEvent: {}
[86.382066] (-) TimerEvent: {}
[86.482396] (-) TimerEvent: {}
[86.582727] (-) TimerEvent: {}
[86.683058] (-) TimerEvent: {}
[86.783384] (-) TimerEvent: {}
[86.883712] (-) TimerEvent: {}
[86.984054] (-) TimerEvent: {}
[87.084389] (-) TimerEvent: {}
[87.184728] (-) TimerEvent: {}
[87.266713] (moveit_servo) StdoutLine: {'line': b'[ 91%] \x1b[32m\x1b[1mLinking CXX shared library libservo_server.so\x1b[0m\n'}
[87.284858] (-) TimerEvent: {}
[87.385243] (-) TimerEvent: {}
[87.485624] (-) TimerEvent: {}
[87.586018] (-) TimerEvent: {}
[87.686497] (-) TimerEvent: {}
[87.786862] (-) TimerEvent: {}
[87.887268] (-) TimerEvent: {}
[87.905814] (moveit_servo) StdoutLine: {'line': b'[ 91%] Built target servo_server\n'}
[87.939893] (moveit_servo) StdoutLine: {'line': b'[ 94%] \x1b[32m\x1b[1mLinking CXX executable test_servo\x1b[0m\n'}
[87.987405] (-) TimerEvent: {}
[88.087743] (-) TimerEvent: {}
[88.188093] (-) TimerEvent: {}
[88.288460] (-) TimerEvent: {}
[88.388803] (-) TimerEvent: {}
[88.489148] (-) TimerEvent: {}
[88.574757] (moveit_servo) StdoutLine: {'line': b'[ 94%] Built target test_servo\n'}
[88.589240] (-) TimerEvent: {}
[88.689583] (-) TimerEvent: {}
[88.789884] (-) TimerEvent: {}
[88.890194] (-) TimerEvent: {}
[88.990509] (-) TimerEvent: {}
[89.090804] (-) TimerEvent: {}
[89.191105] (-) TimerEvent: {}
[89.291402] (-) TimerEvent: {}
[89.391699] (-) TimerEvent: {}
[89.492015] (-) TimerEvent: {}
[89.576719] (moveit_servo) StdoutLine: {'line': b'[ 97%] \x1b[32m\x1b[1mLinking CXX executable servo_cpp_demo\x1b[0m\n'}
[89.592135] (-) TimerEvent: {}
[89.692458] (-) TimerEvent: {}
[89.792759] (-) TimerEvent: {}
[89.893060] (-) TimerEvent: {}
[89.993340] (-) TimerEvent: {}
[90.093647] (-) TimerEvent: {}
[90.194065] (-) TimerEvent: {}
[90.239946] (moveit_servo) StdoutLine: {'line': b'[ 97%] Built target servo_cpp_demo\n'}
[90.241472] (moveit_servo) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[90.244341] (moveit_servo) CommandEnded: {'returncode': 2}
[90.294207] (-) TimerEvent: {}
[90.354360] (moveit_servo) JobEnded: {'identifier': 'moveit_servo', 'rc': 2}
[90.365066] (-) EventReactorShutdown: {}
