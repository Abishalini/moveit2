[0.000000] (-) TimerEvent: {}
[0.000450] (-) JobUnselected: {'identifier': 'moveit_common'}
[0.000983] (-) JobUnselected: {'identifier': 'moveit_core'}
[0.001237] (-) JobUnselected: {'identifier': 'moveit_fake_controller_manager'}
[0.001333] (-) JobUnselected: {'identifier': 'moveit_kinematics'}
[0.001370] (-) JobUnselected: {'identifier': 'moveit_planners_ompl'}
[0.001392] (-) JobUnselected: {'identifier': 'moveit_ros_benchmarks'}
[0.002163] (-) JobUnselected: {'identifier': 'moveit_ros_move_group'}
[0.002227] (-) JobUnselected: {'identifier': 'moveit_ros_occupancy_map_monitor'}
[0.002335] (-) JobUnselected: {'identifier': 'moveit_ros_planning'}
[0.002397] (-) JobUnselected: {'identifier': 'moveit_ros_planning_interface'}
[0.002505] (-) JobUnselected: {'identifier': 'moveit_ros_robot_interaction'}
[0.002553] (-) JobUnselected: {'identifier': 'moveit_ros_visualization'}
[0.002592] (-) JobUnselected: {'identifier': 'moveit_ros_warehouse'}
[0.002629] (-) JobUnselected: {'identifier': 'moveit_simple_controller_manager'}
[0.002662] (-) JobUnselected: {'identifier': 'run_move_group'}
[0.002694] (-) JobUnselected: {'identifier': 'run_moveit_cpp'}
[0.002854] (moveit_servo) JobQueued: {'identifier': 'moveit_servo', 'dependencies': OrderedDict([('moveit_common', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_common'), ('moveit_core', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_core'), ('moveit_ros_occupancy_map_monitor', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_ros_occupancy_map_monitor'), ('moveit_ros_planning', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_ros_planning'), ('moveit_kinematics', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_kinematics'), ('moveit_ros_move_group', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_ros_move_group'), ('moveit_ros_planning_interface', '/home/abishalini/ws_ros2/src/moveit2/install/moveit_ros_planning_interface')])}
[0.002924] (moveit_servo) JobStarted: {'identifier': 'moveit_servo'}
[0.019740] (moveit_servo) JobProgress: {'identifier': 'moveit_servo', 'progress': 'cmake'}
[0.020983] (moveit_servo) JobProgress: {'identifier': 'moveit_servo', 'progress': 'build'}
[0.021837] (moveit_servo) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/abishalini/ws_ros2/src/moveit2/build/moveit_servo', '--', '-j8', '-l8'], 'cwd': '/home/abishalini/ws_ros2/src/moveit2/build/moveit_servo', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'abishalini'), ('SSH_AGENT_PID', '1715'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo/lib:/home/abishalini/ws_ros2/install/moveit_ros_visualization/lib:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks/lib:/home/abishalini/ws_ros2/install/moveit_ros_warehouse/lib:/home/abishalini/ws_ros2/install/warehouse_ros/lib:/home/abishalini/ws_ros2/install/transmission_interface/lib:/home/abishalini/ws_ros2/install/test_robot_hardware/lib:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager/lib:/home/abishalini/ws_ros2/install/moveit_servo/lib:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction/lib:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface/lib:/home/abishalini/ws_ros2/install/moveit_ros_move_group/lib:/home/abishalini/ws_ros2/install/moveit_planners_ompl/lib:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager/lib:/home/abishalini/ws_ros2/install/moveit_ros_planning/lib:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor/lib:/home/abishalini/ws_ros2/install/moveit_kinematics/lib:/home/abishalini/ws_ros2/install/moveit_core/lib:/home/abishalini/ws_ros2/install/srdfdom/lib:/home/abishalini/ws_ros2/install/moveit_msgs/lib:/home/abishalini/ws_ros2/install/joint_trajectory_controller/lib:/home/abishalini/ws_ros2/install/joint_state_controller/lib:/home/abishalini/ws_ros2/install/diff_drive_controller/lib:/home/abishalini/ws_ros2/install/controller_manager/lib:/home/abishalini/ws_ros2/install/controller_interface/lib:/home/abishalini/ws_ros2/install/hardware_interface/lib:/home/abishalini/ws_ros2/install/geometric_shapes/lib:/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/abishalini'), ('OLDPWD', '/home/abishalini/ws_ros2'), ('DESKTOP_SESSION', 'ubuntu'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/terminator.desktop'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('PS1', '\\u@\\h \\[\\e[1;34m\\]\\w \\[\\e[32m\\]$(git_branch)\\[\\e[00m\\]$'), ('MANAGERPID', '1517'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '2731'), ('MANDATORY_PATH', '/usr/share/gconf/ubuntu.mandatory.path'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/abishalini/ws_ros2/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'abishalini'), ('JOURNAL_STREAM', '9:46405'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('DEFAULTS_PATH', '/usr/share/gconf/ubuntu.default.path'), ('USERNAME', 'abishalini'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/home/abishalini/ws_ros2/install/moveit_core/bin:/opt/ros/foxy/bin:/home/abishalini/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/davetop:@/tmp/.ICE-unix/1757,unix/davetop:/tmp/.ICE-unix/1757'), ('INVOCATION_ID', '89808c62cf0145ecae5b9a1520bbb3c1'), ('XDG_MENU_PREFIX', 'gnome-'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo:/home/abishalini/ws_ros2/install/moveit_ros_visualization:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks:/home/abishalini/ws_ros2/install/moveit_ros_warehouse:/home/abishalini/ws_ros2/install/warehouse_ros:/home/abishalini/ws_ros2/install/ros2_control:/home/abishalini/ws_ros2/install/transmission_interface:/home/abishalini/ws_ros2/install/test_robot_hardware:/home/abishalini/ws_ros2/install/run_moveit_cpp:/home/abishalini/ws_ros2/install/run_move_group:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager:/home/abishalini/ws_ros2/install/moveit_servo:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface:/home/abishalini/ws_ros2/install/moveit_ros_move_group:/home/abishalini/ws_ros2/install/moveit_planners_ompl:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager:/home/abishalini/ws_ros2/install/moveit_ros_planning:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor:/home/abishalini/ws_ros2/install/moveit_kinematics:/home/abishalini/ws_ros2/install/moveit_core:/home/abishalini/ws_ros2/install/srdfdom:/home/abishalini/ws_ros2/install/fake_joint_driver:/home/abishalini/ws_ros2/install/ros2_controllers:/home/abishalini/ws_ros2/install/moveit_resources:/home/abishalini/ws_ros2/install/moveit_resources_pr2_description:/home/abishalini/ws_ros2/install/moveit_resources_panda_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_panda_description:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_description:/home/abishalini/ws_ros2/install/moveit_common:/home/abishalini/ws_ros2/install/joint_trajectory_controller:/home/abishalini/ws_ros2/install/joint_state_controller:/home/abishalini/ws_ros2/install/diff_drive_controller:/home/abishalini/ws_ros2/install/controller_manager:/home/abishalini/ws_ros2/install/controller_interface:/home/abishalini/ws_ros2/install/hardware_interface:/home/abishalini/ws_ros2/install/geometric_shapes:/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:341978e3-96ab-4a4b-94f0-fbf519e72560'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/abishalini/ws_ros2/src/moveit2/build/moveit_servo'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo/lib/python3.8/site-packages:/home/abishalini/ws_ros2/install/moveit_msgs/lib/python3.8/site-packages:/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/home/abishalini/ws_ros2/install/warehouse_ros_mongo:/home/abishalini/ws_ros2/install/moveit_ros_visualization:/home/abishalini/ws_ros2/install/moveit_ros_benchmarks:/home/abishalini/ws_ros2/install/moveit_ros_warehouse:/home/abishalini/ws_ros2/install/warehouse_ros:/home/abishalini/ws_ros2/install/ros2_control:/home/abishalini/ws_ros2/install/transmission_interface:/home/abishalini/ws_ros2/install/test_robot_hardware:/home/abishalini/ws_ros2/install/run_moveit_cpp:/home/abishalini/ws_ros2/install/run_move_group:/home/abishalini/ws_ros2/install/moveit_simple_controller_manager:/home/abishalini/ws_ros2/install/moveit_servo:/home/abishalini/ws_ros2/install/moveit_ros_robot_interaction:/home/abishalini/ws_ros2/install/moveit_ros_planning_interface:/home/abishalini/ws_ros2/install/moveit_ros_move_group:/home/abishalini/ws_ros2/install/moveit_planners_ompl:/home/abishalini/ws_ros2/install/moveit_fake_controller_manager:/home/abishalini/ws_ros2/install/moveit_ros_planning:/home/abishalini/ws_ros2/install/moveit_ros_occupancy_map_monitor:/home/abishalini/ws_ros2/install/moveit_kinematics:/home/abishalini/ws_ros2/install/moveit_core:/home/abishalini/ws_ros2/install/srdfdom:/home/abishalini/ws_ros2/install/fake_joint_driver:/home/abishalini/ws_ros2/install/ros2_controllers:/home/abishalini/ws_ros2/install/moveit_resources:/home/abishalini/ws_ros2/install/moveit_resources_pr2_description:/home/abishalini/ws_ros2/install/moveit_resources_panda_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_panda_description:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_moveit_config:/home/abishalini/ws_ros2/install/moveit_resources_fanuc_description:/home/abishalini/ws_ros2/install/moveit_msgs:/home/abishalini/ws_ros2/install/moveit_common:/home/abishalini/ws_ros2/install/joint_trajectory_controller:/home/abishalini/ws_ros2/install/joint_state_controller:/home/abishalini/ws_ros2/install/diff_drive_controller:/home/abishalini/ws_ros2/install/controller_manager:/home/abishalini/ws_ros2/install/controller_interface:/home/abishalini/ws_ros2/install/hardware_interface:/home/abishalini/ws_ros2/install/geometric_shapes:/opt/ros/foxy')]), 'shell': False}
[0.100073] (-) TimerEvent: {}
[0.122902] (moveit_servo) StdoutLine: {'line': b'[  5%] Built target gtest_main\n'}
[0.123387] (moveit_servo) StdoutLine: {'line': b'[ 11%] Built target gtest\n'}
[0.135091] (moveit_servo) StdoutLine: {'line': b'[ 17%] Built target fake_command_publisher\n'}
[0.139311] (moveit_servo) StdoutLine: {'line': b'[ 23%] Built target test_servo_parameters_node\n'}
[0.152535] (moveit_servo) StdoutLine: {'line': b'[ 29%] Built target servo_controller_input\n'}
[0.192471] (moveit_servo) StdoutLine: {'line': b'[ 35%] Built target test_servo_collision\n'}
[0.195776] (moveit_servo) StdoutLine: {'line': b'[ 41%] Built target test_servo_singularity\n'}
[0.199768] (moveit_servo) StdoutLine: {'line': b'[ 47%] Built target test_servo_integration\n'}
[0.200062] (-) TimerEvent: {}
[0.203364] (moveit_servo) StdoutLine: {'line': b'[ 64%] Built target moveit_servo\n'}
[0.238925] (moveit_servo) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target pose_tracking\x1b[0m\n'}
[0.264385] (moveit_servo) StdoutLine: {'line': b'[ 70%] Built target test_low_pass_filter\n'}
[0.274690] (moveit_servo) StdoutLine: {'line': b'[ 76%] Built target test_servo_parameters\n'}
[0.294350] (moveit_servo) StdoutLine: {'line': b'[ 82%] Built target servo_server\n'}
[0.296641] (moveit_servo) StdoutLine: {'line': b'[ 88%] Built target test_servo\n'}
[0.299685] (moveit_servo) StdoutLine: {'line': b'[ 94%] Built target servo_cpp_demo\n'}
[0.300158] (-) TimerEvent: {}
[0.336880] (moveit_servo) StdoutLine: {'line': b'[ 97%] \x1b[32mBuilding CXX object CMakeFiles/pose_tracking.dir/src/pose_tracking.cpp.o\x1b[0m\n'}
[0.400298] (-) TimerEvent: {}
[0.500591] (-) TimerEvent: {}
[0.600891] (-) TimerEvent: {}
[0.701220] (-) TimerEvent: {}
[0.801574] (-) TimerEvent: {}
[0.901899] (-) TimerEvent: {}
[1.002229] (-) TimerEvent: {}
[1.102582] (-) TimerEvent: {}
[1.202910] (-) TimerEvent: {}
[1.303342] (-) TimerEvent: {}
[1.403729] (-) TimerEvent: {}
[1.504043] (-) TimerEvent: {}
[1.604361] (-) TimerEvent: {}
[1.704677] (-) TimerEvent: {}
[1.804985] (-) TimerEvent: {}
[1.905297] (-) TimerEvent: {}
[2.005608] (-) TimerEvent: {}
[2.105922] (-) TimerEvent: {}
[2.206234] (-) TimerEvent: {}
[2.306548] (-) TimerEvent: {}
[2.406852] (-) TimerEvent: {}
[2.507185] (-) TimerEvent: {}
[2.607535] (-) TimerEvent: {}
[2.707880] (-) TimerEvent: {}
[2.808192] (-) TimerEvent: {}
[2.908565] (-) TimerEvent: {}
[3.008891] (-) TimerEvent: {}
[3.109221] (-) TimerEvent: {}
[3.209538] (-) TimerEvent: {}
[3.309957] (-) TimerEvent: {}
[3.410560] (-) TimerEvent: {}
[3.510864] (-) TimerEvent: {}
[3.611208] (-) TimerEvent: {}
[3.711558] (-) TimerEvent: {}
[3.811880] (-) TimerEvent: {}
[3.912204] (-) TimerEvent: {}
[4.012528] (-) TimerEvent: {}
[4.112878] (-) TimerEvent: {}
[4.213202] (-) TimerEvent: {}
[4.313514] (-) TimerEvent: {}
[4.413838] (-) TimerEvent: {}
[4.514185] (-) TimerEvent: {}
[4.614544] (-) TimerEvent: {}
[4.714847] (-) TimerEvent: {}
[4.815197] (-) TimerEvent: {}
[4.915548] (-) TimerEvent: {}
[5.015879] (-) TimerEvent: {}
[5.116205] (-) TimerEvent: {}
[5.216525] (-) TimerEvent: {}
[5.316847] (-) TimerEvent: {}
[5.417200] (-) TimerEvent: {}
[5.517523] (-) TimerEvent: {}
[5.617845] (-) TimerEvent: {}
[5.718163] (-) TimerEvent: {}
[5.818488] (-) TimerEvent: {}
[5.918785] (-) TimerEvent: {}
[6.019121] (-) TimerEvent: {}
[6.119439] (-) TimerEvent: {}
[6.219764] (-) TimerEvent: {}
[6.320099] (-) TimerEvent: {}
[6.420436] (-) TimerEvent: {}
[6.520757] (-) TimerEvent: {}
[6.621091] (-) TimerEvent: {}
[6.695289] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/ext/alloc_traits.h:36\x1b[m\x1b[K,\n'}
[6.695522] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/stl_construct.h:61\x1b[m\x1b[K,\n'}
[6.695623] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:64\x1b[m\x1b[K,\n'}
[6.695725] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[6.695805] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[6.695885] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[6.695961] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/alloc_traits.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::allocator_traits<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.696041] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:47:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.696122] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:91:1:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.696212] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[6.696287] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:400:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.696367] (moveit_servo) StderrLine: {'line': b'  400 |       using \x1b[01;31m\x1b[Kpointer\x1b[m\x1b[K = _Tp*;\n'}
[6.696442] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.696522] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/alloc_traits.h:403:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.696603] (moveit_servo) StderrLine: {'line': b'  403 |       using \x1b[01;31m\x1b[Kconst_pointer\x1b[m\x1b[K = const _Tp*;\n'}
[6.696676] (moveit_servo) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.699731] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:80\x1b[m\x1b[K,\n'}
[6.699884] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[6.699971] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[6.700061] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[6.700138] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/unique_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::default_delete<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.700220] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:119:18:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.700303] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:91:1:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.700393] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[6.700466] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/unique_ptr.h:71:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.700574] (moveit_servo) StderrLine: {'line': b'   71 |         \x1b[01;31m\x1b[Kdefault_delete\x1b[m\x1b[K(const default_delete<_Up>&) noexcept { }\n'}
[6.700649] (moveit_servo) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.700722] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/unique_ptr.h:75:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.700825] (moveit_servo) StderrLine: {'line': b'   75 |       \x1b[01;31m\x1b[Koperator\x1b[m\x1b[K()(_Tp* __ptr) const\n'}
[6.700899] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.711378] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[6.711606] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[6.711948] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:39\x1b[m\x1b[K,\n'}
[6.712060] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:42\x1b[m\x1b[K,\n'}
[6.712141] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[6.712226] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[6.712333] (moveit_servo) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::AnySubscriptionCallback<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.712423] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription.hpp:327:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.712510] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1320:45:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _From1, class _To1, class> static std::true_type std::__is_convertible_helper<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >*, rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >*, false>::__test<_From1, _To1, <template-parameter-1-3> >(int) [with _From1 = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >*; _To1 = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >*; <template-parameter-1-3> = <missing>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.712599] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1329:42:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::__is_convertible_helper<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >*, rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >*, false>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.712678] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1335:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::is_convertible<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >*, rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >*>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.712759] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:927:12:\x1b[m\x1b[K   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[6.712836] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1099:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp> using _Assignable = std::__shared_ptr<_Tp, _Lp>::_Compatible<_Yp, std::__shared_ptr<_Tp, _Lp>&> [with _Yp = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.712914] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1271:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::__shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, __gnu_cxx::_S_atomic>::_Assignable<_Yp> std::__shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, __gnu_cxx::_S_atomic>::operator=<_Yp>(std::__shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.712997] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/type_traits:1017:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::is_assignable<std::__shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, __gnu_cxx::_S_atomic>&, std::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.713076] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:111:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.713157] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.713254] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[6.713334] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.713424] (moveit_servo) StderrLine: {'line': b'  111 |   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[6.713498] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[6.713569] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.713697] (moveit_servo) StderrLine: {'line': b'   83 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[6.713811] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[6.713900] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:125:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99 cannot be overloaded with \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.713997] (moveit_servo) StderrLine: {'line': b'  125 |   void \x1b[01;31m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[6.714069] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[6.714139] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kprevious declaration \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.714217] (moveit_servo) StderrLine: {'line': b'   97 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[6.714289] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[6.716889] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[Kmoveit_servo::PoseTracking::PoseTracking(const SharedPtr&, const ServoParametersPtr&, const PlanningSceneMonitorPtr&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.717421] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.717531] (moveit_servo) StderrLine: {'line': b'   74 |       "target_pose", 1, std::bind(&PoseTracking::targetPoseCallback, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[6.717616] (moveit_servo) StderrLine: {'line': b'      |                                                                                                  \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.717705] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[6.717786] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[6.717860] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[6.717933] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[6.718005] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:309:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.718079] (moveit_servo) StderrLine: {'line': b'  309 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[6.718156] (moveit_servo) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.718227] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:309:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.718317] (moveit_servo) StderrLine: {'line': b'  309 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[6.718440] (moveit_servo) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.718524] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.718602] (moveit_servo) StderrLine: {'line': b'  313 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[6.718674] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.718745] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.718836] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.718919] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:313:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.719000] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[6.719072] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:111:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.719146] (moveit_servo) StderrLine: {'line': b'  111 |  using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.719216] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.719286] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:324:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.719365] (moveit_servo) StderrLine: {'line': b'  324 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[6.719436] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.719506] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:324:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.719578] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.719665] (moveit_servo) StderrLine: {'line': b'   74 |       "target_pose", 1, std::bind(&PoseTracking::targetPoseCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.719738] (moveit_servo) StderrLine: {'line': b'      |                                                                                                  \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.719810] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[6.719913] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[6.719998] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[6.720082] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[6.720154] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:333:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.720230] (moveit_servo) StderrLine: {'line': b'  333 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[6.720305] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.720375] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:333:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.720453] (moveit_servo) StderrLine: {'line': b'  333 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[6.720529] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.720601] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.720676] (moveit_servo) StderrLine: {'line': b'  341 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[6.720748] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.720821] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:341:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  substitution of deduced template arguments resulted in errors seen above\n'}
[6.720892] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:349:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.720966] (moveit_servo) StderrLine: {'line': b'  349 |  \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[6.721036] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.721103] (-) TimerEvent: {}
[6.721209] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:349:2:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.721292] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.721382] (moveit_servo) StderrLine: {'line': b'   74 |       "target_pose", 1, std::bind(&PoseTracking::targetPoseCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.721453] (moveit_servo) StderrLine: {'line': b'      |                                                                                                  \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.729192] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kmoveit_servo::PoseTrackingStatusCode moveit_servo::PoseTracking::moveToPose(const Vector3d&, double, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.729506] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:132:70:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<geometry_msgs::msg::TwistStamped_<std::allocator<void> > >::publish(geometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.729715] (moveit_servo) StderrLine: {'line': b'  132 |     twist_stamped_pub_->publish(PoseTracking::calculateTwistCommand()\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[6.730225] (moveit_servo) StderrLine: {'line': b'      |                                                                      \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.730380] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_interfaces/node_topics_interface.hpp:29\x1b[m\x1b[K,\n'}
[6.730488] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:55\x1b[m\x1b[K,\n'}
[6.730593] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:42\x1b[m\x1b[K,\n'}
[6.730688] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[6.730812] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[6.730913] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type = std::default_delete<geometry_msgs::msg::TwistStamped_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.731037] (moveit_servo) StderrLine: {'line': b'  185 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<MessageT, MessageDeleter> msg)\n'}
[6.731134] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.731228] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:185:53:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<geometry_msgs::msg::TwistStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::TwistStamped_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.731342] (moveit_servo) StderrLine: {'line': b'  185 |   publish(\x1b[01;36m\x1b[Kstd::unique_ptr<MessageT, MessageDeleter> msg\x1b[m\x1b[K)\n'}
[6.731437] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.731531] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:209:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const MessageT&) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.731642] (moveit_servo) StderrLine: {'line': b'  209 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const MessageT & msg)\n'}
[6.731737] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.731865] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:209:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst geometry_msgs::msg::TwistStamped_<std::allocator<void> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.731988] (moveit_servo) StderrLine: {'line': b'  209 |   publish(\x1b[01;36m\x1b[Kconst MessageT & msg\x1b[m\x1b[K)\n'}
[6.732089] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.732186] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:226:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.732340] (moveit_servo) StderrLine: {'line': b'  226 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[6.732483] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.732628] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:226:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_t&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.732815] (moveit_servo) StderrLine: {'line': b'  226 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[6.732967] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.733111] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:232:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.733295] (moveit_servo) StderrLine: {'line': b'  232 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[6.733443] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.733586] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:232:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.733778] (moveit_servo) StderrLine: {'line': b'  232 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[6.733931] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.734081] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:246:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<MessageT, AllocatorT>&&) [with MessageT = geometry_msgs::msg::TwistStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.734268] (moveit_servo) StderrLine: {'line': b'  246 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<MessageT, AllocatorT> && loaned_msg)\n'}
[6.734412] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.734554] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/publisher.hpp:246:58:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<geometry_msgs::msg::TwistStamped_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.734740] (moveit_servo) StderrLine: {'line': b'  246 |   publish(\x1b[01;36m\x1b[Krclcpp::LoanedMessage<MessageT, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[6.734906] (moveit_servo) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[6.735179] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid moveit_servo::PoseTracking::readROSParams()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.735346] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:205:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KshutdownIfError\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kmoveit_servo::PoseTracking\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.735545] (moveit_servo) StderrLine: {'line': b'  205 |   PoseTracking::\x1b[01;31m\x1b[KshutdownIfError\x1b[m\x1b[K(node->get_name(), error);\n'}
[6.735754] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.758476] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr moveit_servo::PoseTracking::calculateTwistCommand()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.758832] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:304:10:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcould not convert \xe2\x80\x98\x1b[01m\x1b[Kmsg\x1b[m\x1b[K\xe2\x80\x99 from \xe2\x80\x98\x1b[01m\x1b[Kboost::shared_ptr<geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::TwistStamped_<std::allocator<void> >::ConstSharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99}\n'}
[6.759073] (moveit_servo) StderrLine: {'line': b'  304 |   return \x1b[01;31m\x1b[Kmsg\x1b[m\x1b[K;\n'}
[6.759233] (moveit_servo) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[6.759420] (moveit_servo) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[6.759575] (moveit_servo) StderrLine: {'line': b'      |          \x1b[01;31m\x1b[Kboost::shared_ptr<geometry_msgs::msg::TwistStamped_<std::allocator<void> > >\x1b[m\x1b[K\n'}
[6.761917] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:\x1b[m\x1b[K At global scope:\n'}
[6.762238] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:388:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno declaration matches \xe2\x80\x98\x1b[01m\x1b[Kvoid moveit_servo::PoseTracking::shutdownIfError(const string&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.762463] (moveit_servo) StderrLine: {'line': b'  388 | void \x1b[01;31m\x1b[KPoseTracking\x1b[m\x1b[K::shutdownIfError(const std::string &parent_name, std::size_t error_count)\n'}
[6.762627] (moveit_servo) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.762807] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:388:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kno functions named \xe2\x80\x98\x1b[01m\x1b[Kvoid moveit_servo::PoseTracking::shutdownIfError(const string&, std::size_t)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.762986] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[6.763142] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:85:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass moveit_servo::PoseTracking\x1b[m\x1b[K\xe2\x80\x99 defined here\n'}
[6.763317] (moveit_servo) StderrLine: {'line': b'   85 | class \x1b[01;36m\x1b[KPoseTracking\x1b[m\x1b[K\n'}
[6.763503] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.821252] (-) TimerEvent: {}
[6.921683] (-) TimerEvent: {}
[7.022091] (-) TimerEvent: {}
[7.122533] (-) TimerEvent: {}
[7.222912] (-) TimerEvent: {}
[7.323310] (-) TimerEvent: {}
[7.423713] (-) TimerEvent: {}
[7.524115] (-) TimerEvent: {}
[7.624522] (-) TimerEvent: {}
[7.724924] (-) TimerEvent: {}
[7.825332] (-) TimerEvent: {}
[7.925748] (-) TimerEvent: {}
[8.026160] (-) TimerEvent: {}
[8.126568] (-) TimerEvent: {}
[8.178889] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_interfaces/node_topics_interface.hpp:32\x1b[m\x1b[K,\n'}
[8.179290] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:55\x1b[m\x1b[K,\n'}
[8.179735] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:42\x1b[m\x1b[K,\n'}
[8.179835] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[8.179926] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[8.180009] (moveit_servo) StderrLine: {'line': b'/opt/ros/foxy/include/rclcpp/subscription_factory.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.180118] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:138:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.180221] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.180319] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[8.180398] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:97:3:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >::set(std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>)\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.180486] (moveit_servo) StderrLine: {'line': b'   97 |   \x1b[01;31m\x1b[Kany_subscription_callback\x1b[m\x1b[K.set(std::forward<CallbackT>(callback));\n'}
[8.180563] (moveit_servo) StderrLine: {'line': b'      |   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.180641] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29\x1b[m\x1b[K,\n'}
[8.180718] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26\x1b[m\x1b[K,\n'}
[8.180796] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node.hpp:39\x1b[m\x1b[K,\n'}
[8.180874] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:42\x1b[m\x1b[K,\n'}
[8.180950] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[8.181035] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[8.181113] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.181203] (moveit_servo) StderrLine: {'line': b'   83 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[8.181281] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.181358] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.181462] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:81:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.181543] (moveit_servo) StderrLine: {'line': b'   81 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[8.181619] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.181695] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.181781] (moveit_servo) StderrLine: {'line': b'   97 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[8.181856] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.181932] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.182010] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:95:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.182086] (moveit_servo) StderrLine: {'line': b'   95 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[8.182162] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.182238] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::default_delete<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.182342] (moveit_servo) StderrLine: {'line': b'  139 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[8.182436] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.182513] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.182591] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:137:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.182670] (moveit_servo) StderrLine: {'line': b'  137 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[8.182774] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.182863] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::default_delete<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.182964] (moveit_servo) StderrLine: {'line': b'  153 |   void \x1b[01;36m\x1b[Kset\x1b[m\x1b[K(CallbackT callback)\n'}
[8.183042] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.183122] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[8.183208] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:151:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.183300] (moveit_servo) StderrLine: {'line': b'  151 |     >::type * = \x1b[01;31m\x1b[Knullptr\x1b[m\x1b[K\n'}
[8.183386] (moveit_servo) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.226678] (-) TimerEvent: {}
[8.326989] (-) TimerEvent: {}
[8.427331] (-) TimerEvent: {}
[8.527652] (-) TimerEvent: {}
[8.627969] (-) TimerEvent: {}
[8.728306] (-) TimerEvent: {}
[8.828673] (-) TimerEvent: {}
[8.929043] (-) TimerEvent: {}
[9.029403] (-) TimerEvent: {}
[9.129775] (-) TimerEvent: {}
[9.230173] (-) TimerEvent: {}
[9.330534] (-) TimerEvent: {}
[9.430947] (-) TimerEvent: {}
[9.531347] (-) TimerEvent: {}
[9.631729] (-) TimerEvent: {}
[9.732083] (-) TimerEvent: {}
[9.832459] (-) TimerEvent: {}
[9.932785] (-) TimerEvent: {}
[10.033116] (-) TimerEvent: {}
[10.133447] (-) TimerEvent: {}
[10.218421] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/x86_64-linux-gnu/c++/9/bits/c++allocator.h:33\x1b[m\x1b[K,\n'}
[10.218760] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:46\x1b[m\x1b[K,\n'}
[10.218877] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:63\x1b[m\x1b[K,\n'}
[10.218958] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[10.219033] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[10.219108] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[10.219564] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/ext/new_allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass __gnu_cxx::new_allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.219664] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:112:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.219752] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1365:63:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> struct std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp, std::__void_t<decltype (__enable_shared_from_this_base(declval<const std::__shared_count<__gnu_cxx::_S_atomic>&>(), declval<_Yp*>()))> > [with _Yp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.219839] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1387:21:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Yp2> typename std::enable_if<(! std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp2, void>::value), void>::type std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::_M_enable_shared_from_this_with<_Yp, _Yp2>(_Yp*) [with _Yp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Yp2 = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.219921] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1345:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.220009] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:359:59:\x1b[m\x1b[K   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\n'}
[10.220085] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Args = {std::allocator<void>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.220161] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:68:56:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, Alloc>::AnySubscriptionCallback(std::shared_ptr<_Tp>) [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.220238] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:96:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.220335] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:138:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.220432] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.220518] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[10.220592] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:63:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.220668] (moveit_servo) StderrLine: {'line': b'   63 |       typedef _Tp*       \x1b[01;31m\x1b[Kpointer\x1b[m\x1b[K;\n'}
[10.220741] (moveit_servo) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[10.220812] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/ext/new_allocator.h:64:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.220890] (moveit_servo) StderrLine: {'line': b'   64 |       typedef const _Tp* \x1b[01;31m\x1b[Kconst_pointer\x1b[m\x1b[K;\n'}
[10.220963] (moveit_servo) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.221040] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:63\x1b[m\x1b[K,\n'}
[10.221114] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[10.221187] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[10.221259] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[10.221336] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/allocator.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.221408] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1365:63:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> struct std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp, std::__void_t<decltype (__enable_shared_from_this_base(declval<const std::__shared_count<__gnu_cxx::_S_atomic>&>(), declval<_Yp*>()))> > [with _Yp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.221491] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1387:21:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Yp2> typename std::enable_if<(! std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::__has_esft_base<_Yp2, void>::value), void>::type std::__shared_ptr<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>, __gnu_cxx::_S_atomic>::_M_enable_shared_from_this_with<_Yp, _Yp2>(_Yp*) [with _Yp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Yp2 = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.221572] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1345:4:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.221650] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:359:59:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}; _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.221726] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:701:14:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Alloc = std::allocator<std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&> >; _Args = {std::allocator<void>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.221801] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:717:39:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = std::allocator<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>; _Args = {std::allocator<void>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.221877] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:68:56:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, Alloc>::AnySubscriptionCallback(std::shared_ptr<_Tp>) [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.221958] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:96:57:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.222057] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:138:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.222150] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.222239] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:74:98:\x1b[m\x1b[K   required from here\n'}
[10.222311] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:117:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.222388] (moveit_servo) StderrLine: {'line': b'  117 |       typedef _Tp*       \x1b[01;31m\x1b[Kpointer\x1b[m\x1b[K;\n'}
[10.222459] (moveit_servo) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[10.222530] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/allocator.h:118:26:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.222603] (moveit_servo) StderrLine: {'line': b'  118 |       typedef const _Tp* \x1b[01;31m\x1b[Kconst_pointer\x1b[m\x1b[K;\n'}
[10.222674] (moveit_servo) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.233596] (-) TimerEvent: {}
[10.333951] (-) TimerEvent: {}
[10.434335] (-) TimerEvent: {}
[10.534680] (-) TimerEvent: {}
[10.634978] (-) TimerEvent: {}
[10.735303] (-) TimerEvent: {}
[10.835607] (-) TimerEvent: {}
[10.935952] (-) TimerEvent: {}
[11.036266] (-) TimerEvent: {}
[11.136637] (-) TimerEvent: {}
[11.236966] (-) TimerEvent: {}
[11.337304] (-) TimerEvent: {}
[11.437637] (-) TimerEvent: {}
[11.482094] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:52\x1b[m\x1b[K,\n'}
[11.482348] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[11.482727] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[11.482847] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[11.482932] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[11.483018] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr_access<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic, false, false>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[11.483171] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1080:11:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.483252] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.483333] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[11.483408] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1012:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[11.483489] (moveit_servo) StderrLine: {'line': b' 1012 |       \x1b[01;31m\x1b[Koperator\x1b[m\x1b[K->() const noexcept\n'}
[11.483563] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[11.483638] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1020:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[11.483716] (moveit_servo) StderrLine: {'line': b' 1020 |       \x1b[01;31m\x1b[K_M_get\x1b[m\x1b[K() const noexcept\n'}
[11.483789] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[11.483862] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[11.483938] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.484031] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[11.484105] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1094:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.484180] (moveit_servo) StderrLine: {'line': b' 1094 |  using \x1b[01;31m\x1b[K_Compatible\x1b[m\x1b[K = typename\n'}
[11.484255] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.484335] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1104:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.484415] (moveit_servo) StderrLine: {'line': b' 1104 |  using \x1b[01;31m\x1b[K_UniqCompatible\x1b[m\x1b[K = typename enable_if<__and_<\n'}
[11.484491] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.484678] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1162:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[11.484759] (moveit_servo) StderrLine: {'line': b' 1162 |  \x1b[01;31m\x1b[K__shared_ptr\x1b[m\x1b[K(const __shared_ptr<_Yp, _Lp>& __r,\n'}
[11.484833] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.484905] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Res> using _Compatible = typename std::enable_if<std::__sp_compatible_with<_Yp*, _Tp*>::value, _Res>::type [with _Yp = _Yp; _Res = void; _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[11.484983] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1172:2:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.485058] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.485137] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[11.485210] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1094:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.485286] (moveit_servo) StderrLine: {'line': b' 1094 |  using \x1b[01;31m\x1b[K_Compatible\x1b[m\x1b[K = typename\n'}
[11.485361] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.485489] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp, __gnu_cxx::_Lock_policy _Lp> template<class _Yp, class _Del, class _Res, class _Ptr> using _UniqCompatible = typename std::enable_if<std::__and_<std::__sp_compatible_with<_Yp*, _Tp*>, std::is_convertible<_Ptr, typename std::remove_extent<_Up>::type*> >::value, _Res>::type [with _Yp = _Yp; _Del = _Del; _Res = void; _Ptr = typename std::unique_ptr<_Tp, _Dp>::pointer; _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[11.485646] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1203:2:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.485794] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.485890] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[11.485970] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1104:8:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.486048] (moveit_servo) StderrLine: {'line': b' 1104 |  using \x1b[01;31m\x1b[K_UniqCompatible\x1b[m\x1b[K = typename enable_if<__and_<\n'}
[11.486125] (moveit_servo) StderrLine: {'line': b'      |        \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.486203] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[11.486289] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.486393] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[11.486469] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1219:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.486544] (moveit_servo) StderrLine: {'line': b' 1219 |  \x1b[01;31m\x1b[K__shared_ptr\x1b[m\x1b[K(unique_ptr<_Tp1, _Del>&& __r, __sp_array_delete)\n'}
[11.486618] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.486691] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1309:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[11.486808] (moveit_servo) StderrLine: {'line': b' 1309 |       \x1b[01;31m\x1b[Kget\x1b[m\x1b[K() const noexcept\n'}
[11.486891] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[11.486964] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1404:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[11.487051] (moveit_servo) StderrLine: {'line': b' 1404 |       element_type*    \x1b[01;31m\x1b[K_M_ptr\x1b[m\x1b[K;         // Contained pointer.\n'}
[11.487125] (moveit_servo) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[11.487199] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[11.487272] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[11.487345] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[11.487419] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[11.487494] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kclass std::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[11.487571] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   recursively required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp> rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::borrow_message() [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.487650] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:85:37:\x1b[m\x1b[K   required from here\n'}
[11.487724] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:234:2:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kforming pointer to reference type \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[11.487818] (moveit_servo) StderrLine: {'line': b'  234 |  \x1b[01;31m\x1b[Kshared_ptr\x1b[m\x1b[K(const shared_ptr<_Yp>& __r, element_type* __p) noexcept\n'}
[11.487895] (moveit_servo) StderrLine: {'line': b'      |  \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[11.535641] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr.h:52\x1b[m\x1b[K,\n'}
[11.535999] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/9/memory:81\x1b[m\x1b[K,\n'}
[11.536095] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:37\x1b[m\x1b[K,\n'}
[11.536193] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[11.536304] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[11.536419] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kconstexpr std::__shared_ptr<_Tp, _Lp>::__shared_ptr() [with _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[11.536519] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1287:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::reset() [with _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.536595] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:109:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::return_message(std::shared_ptr<_Tp>&) [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.536670] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:107:16:\x1b[m\x1b[K   required from here\n'}
[11.536740] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1119:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.536811] (moveit_servo) StderrLine: {'line': b' 1119 |       : _M_ptr(0), _M_refcount(\x1b[01;31m\x1b[K)\x1b[m\x1b[K\n'}
[11.536880] (moveit_servo) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[11.536949] (moveit_servo) StderrLine: {'line': b'/usr/include/c++/9/bits/shared_ptr_base.h: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::swap(std::__shared_ptr<_Tp, _Lp>&) [with _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[11.537022] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1287:24:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid std::__shared_ptr<_Tp, _Lp>::reset() [with _Tp = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.537094] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:109:5:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::message_memory_strategy::MessageMemoryStrategy<MessageT, Alloc>::return_message(std::shared_ptr<_Tp>&) [with MessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; Alloc = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.537167] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/message_memory_strategy.hpp:107:16:\x1b[m\x1b[K   required from here\n'}
[11.537237] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1326:12:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kusing invalid field \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr<_Tp, _Lp>::_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.537307] (moveit_servo) StderrLine: {'line': b' 1326 |  std::swap(\x1b[01;31m\x1b[K_M_ptr\x1b[m\x1b[K, __other._M_ptr);\n'}
[11.537376] (moveit_servo) StderrLine: {'line': b'      |            \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[11.537444] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/shared_ptr_base.h:1326:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass std::__shared_ptr<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, __gnu_cxx::_S_atomic>\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[K_M_ptr\x1b[m\x1b[K\xe2\x80\x99\n'}
[11.537517] (moveit_servo) StderrLine: {'line': b' 1326 |  std::swap(_M_ptr, \x1b[01;31m\x1b[K__other._M_ptr\x1b[m\x1b[K);\n'}
[11.537585] (moveit_servo) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[11.537658] (-) TimerEvent: {}
[11.637922] (-) TimerEvent: {}
[11.649297] (moveit_servo) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/9/functional:59\x1b[m\x1b[K,\n'}
[11.649603] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/rclcpp/clock.hpp:18\x1b[m\x1b[K,\n'}
[11.649795] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/foxy/include/control_toolbox/pid.hpp:40\x1b[m\x1b[K,\n'}
[11.649964] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/include/moveit_servo/pose_tracking.h:42\x1b[m\x1b[K,\n'}
[11.650137] (moveit_servo) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/abishalini/ws_ros2/src/moveit2/moveit_ros/moveit_servo/src/pose_tracking.cpp:35\x1b[m\x1b[K:\n'}
[11.650314] (moveit_servo) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/9/bits/std_function.h:667:7:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Res = std::shared_ptr<rclcpp::SubscriptionBase>; _ArgTypes = {rclcpp::node_interfaces::NodeBaseInterface*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&}]\x1b[m\x1b[K\xe2\x80\x99, declared using local type \xe2\x80\x98\x1b[01m\x1b[Krclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (moveit_servo::PoseTracking::*(moveit_servo::PoseTracking*, std::_Placeholder<1>))(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>; AllocatorT = std::allocator<void>; CallbackMessageT = const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&; SubscriptionT = rclcpp::Subscription<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void>, rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>\x1b[m\x1b[K\xe2\x80\x99, is used but never defined [\x1b[01;31m\x1b[K-fpermissive\x1b[m\x1b[K]\n'}
[11.650574] (moveit_servo) StderrLine: {'line': b'  667 |       \x1b[01;31m\x1b[Kfunction<_Res(_ArgTypes...)>\x1b[m\x1b[K::\n'}
[11.650735] (moveit_servo) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[11.738055] (-) TimerEvent: {}
[11.838427] (-) TimerEvent: {}
[11.938809] (-) TimerEvent: {}
[12.039151] (-) TimerEvent: {}
[12.139510] (-) TimerEvent: {}
[12.162889] (moveit_servo) StderrLine: {'line': b'make[2]: *** [CMakeFiles/pose_tracking.dir/build.make:63: CMakeFiles/pose_tracking.dir/src/pose_tracking.cpp.o] Error 1\n'}
[12.163208] (moveit_servo) StderrLine: {'line': b'make[1]: *** [CMakeFiles/Makefile2:452: CMakeFiles/pose_tracking.dir/all] Error 2\n'}
[12.163456] (moveit_servo) StderrLine: {'line': b'make: *** [Makefile:141: all] Error 2\n'}
[12.165575] (moveit_servo) CommandEnded: {'returncode': 2}
[12.239665] (-) TimerEvent: {}
[12.304226] (moveit_servo) JobEnded: {'identifier': 'moveit_servo', 'rc': 2}
[12.335430] (-) EventReactorShutdown: {}
